ARM GAS  D:\Windows\AppData\Local\Temp\cc9NldBr.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"sd_manager.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.comm	pfile,4,4
  19              		.global	sd_ok
  20              		.bss
  21              		.type	sd_ok, %object
  22              		.size	sd_ok, 1
  23              	sd_ok:
  24 0000 00       		.space	1
  25              		.global	set_time_file
  26              		.section	.rodata
  27              		.align	2
  28              		.type	set_time_file, %object
  29              		.size	set_time_file, 14
  30              	set_time_file:
  31 0000 5C736574 		.ascii	"\\set_time.txt\000"
  31      5F74696D 
  31      652E7478 
  31      7400
  32              		.global	format_file
  33 000e 0000     		.align	2
  34              		.type	format_file, %object
  35              		.size	format_file, 12
  36              	format_file:
  37 0010 5C666F72 		.ascii	"\\format.txt\000"
  37      6D61742E 
  37      74787400 
  38              		.comm	sd_queue,16384,4
  39              		.global	sd_head
  40              		.bss
  41 0001 00       		.align	1
  42              		.type	sd_head, %object
  43              		.size	sd_head, 2
  44              	sd_head:
  45 0002 0000     		.space	2
  46              		.global	sd_tail
  47              		.align	1
  48              		.type	sd_tail, %object
  49              		.size	sd_tail, 2
  50              	sd_tail:
  51 0004 0000     		.space	2
  52              		.section	.text.power_isr_custom,"ax",%progbits
ARM GAS  D:\Windows\AppData\Local\Temp\cc9NldBr.s 			page 2


  53              		.align	2
  54              		.global	power_isr_custom
  55              		.thumb
  56              		.thumb_func
  57              		.type	power_isr_custom, %function
  58              	power_isr_custom:
  59              	.LFB63:
  60              		.file 1 "sd_manager.c"
   1:sd_manager.c  **** #include "sd_manager.h"
   2:sd_manager.c  **** 
   3:sd_manager.c  **** 
   4:sd_manager.c  **** FS_FILE* pfile;
   5:sd_manager.c  **** uint8_t sd_ok = 0;
   6:sd_manager.c  **** 
   7:sd_manager.c  **** const char set_time_file[] = "\\set_time.txt";
   8:sd_manager.c  **** const char format_file[] = "\\format.txt";
   9:sd_manager.c  **** 
  10:sd_manager.c  **** DataPacket sd_queue[SD_QUEUE_LENGTH];
  11:sd_manager.c  **** uint16_t sd_head = 0, sd_tail = 0;
  12:sd_manager.c  **** 
  13:sd_manager.c  **** 	
  14:sd_manager.c  **** CY_ISR(power_isr_custom) {
  61              		.loc 1 14 0
  62              		.cfi_startproc
  63              		@ args = 0, pretend = 0, frame = 0
  64              		@ frame_needed = 1, uses_anonymous_args = 0
  65 0000 80B5     		push	{r7, lr}
  66              		.cfi_def_cfa_offset 8
  67              		.cfi_offset 7, -8
  68              		.cfi_offset 14, -4
  69 0002 00AF     		add	r7, sp, #0
  70              		.cfi_def_cfa_register 7
  15:sd_manager.c  **** 	sd_stop();
  71              		.loc 1 15 0
  72 0004 FFF7FEFF 		bl	sd_stop
  16:sd_manager.c  **** 	power_isr_ClearPending();
  73              		.loc 1 16 0
  74 0008 FFF7FEFF 		bl	power_isr_ClearPending
  17:sd_manager.c  ****     CyDelay(1000);
  75              		.loc 1 17 0
  76 000c 4FF47A70 		mov	r0, #1000
  77 0010 FFF7FEFF 		bl	CyDelay
  78              	.L2:
  18:sd_manager.c  ****     //CySoftwareReset();
  19:sd_manager.c  ****     for(;;);	// halt program until IC shuts down
  79              		.loc 1 19 0 discriminator 1
  80 0014 FEE7     		b	.L2
  81              		.cfi_endproc
  82              	.LFE63:
  83              		.size	power_isr_custom, .-power_isr_custom
  84 0016 00BF     		.section	.text.sd_isr_custom,"ax",%progbits
  85              		.align	2
  86              		.global	sd_isr_custom
  87              		.thumb
  88              		.thumb_func
  89              		.type	sd_isr_custom, %function
  90              	sd_isr_custom:
ARM GAS  D:\Windows\AppData\Local\Temp\cc9NldBr.s 			page 3


  91              	.LFB64:
  20:sd_manager.c  **** } // CY_ISR(power_interrupt)
  21:sd_manager.c  **** 
  22:sd_manager.c  **** //triggers every second
  23:sd_manager.c  **** CY_ISR(sd_isr_custom) {
  92              		.loc 1 23 0
  93              		.cfi_startproc
  94              		@ args = 0, pretend = 0, frame = 0
  95              		@ frame_needed = 1, uses_anonymous_args = 0
  96 0000 80B5     		push	{r7, lr}
  97              		.cfi_def_cfa_offset 8
  98              		.cfi_offset 7, -8
  99              		.cfi_offset 14, -4
 100 0002 00AF     		add	r7, sp, #0
 101              		.cfi_def_cfa_register 7
  24:sd_manager.c  **** 	sd_write();
 102              		.loc 1 24 0
 103 0004 FFF7FEFF 		bl	sd_write
  25:sd_manager.c  **** }
 104              		.loc 1 25 0
 105 0008 80BD     		pop	{r7, pc}
 106              		.cfi_endproc
 107              	.LFE64:
 108              		.size	sd_isr_custom, .-sd_isr_custom
 109 000a 00BF     		.section	.rodata
 110              		.align	2
 111              	.LC0:
 112 001c 7200     		.ascii	"r\000"
 113 001e 0000     		.align	2
 114              	.LC1:
 115 0020 00       		.ascii	"\000"
 116 0021 000000   		.align	2
 117              	.LC2:
 118 0024 74657374 		.ascii	"test_folder\000"
 118      5F666F6C 
 118      64657200 
 119              		.align	2
 120              	.LC3:
 121 0030 5C746573 		.ascii	"\\test_folder\\test_file.txt\000"
 121      745F666F 
 121      6C646572 
 121      5C746573 
 121      745F6669 
 122 004b 00       		.align	2
 123              	.LC4:
 124 004c 7700     		.ascii	"w\000"
 125              		.section	.text.sd_init,"ax",%progbits
 126              		.align	2
 127              		.global	sd_init
 128              		.thumb
 129              		.thumb_func
 130              		.type	sd_init, %function
 131              	sd_init:
 132              	.LFB65:
  26:sd_manager.c  **** 
  27:sd_manager.c  **** /* sd_init()
  28:sd_manager.c  **** 	Takes Time struct (time). Returns nothing.
ARM GAS  D:\Windows\AppData\Local\Temp\cc9NldBr.s 			page 4


  29:sd_manager.c  **** 
  30:sd_manager.c  **** 	Initializes SD card filesystem.
  31:sd_manager.c  **** 	The following events will cause the sd_ok flag to be reset, which aborts all
  32:sd_manager.c  **** 	SD functions:
  33:sd_manager.c  **** 		- the SD card is not found
  34:sd_manager.c  **** 		- unable to create the "LOGS" directory
  35:sd_manager.c  **** 		- unable to create a directory named after the date
  36:sd_manager.c  **** 		- unable to create and open file for writing
  37:sd_manager.c  **** 
  38:sd_manager.c  **** 	sd_ok is set when the SD card is functional */
  39:sd_manager.c  **** void sd_init() {
 133              		.loc 1 39 0
 134              		.cfi_startproc
 135              		@ args = 0, pretend = 0, frame = 64
 136              		@ frame_needed = 1, uses_anonymous_args = 0
 137 0000 B0B5     		push	{r4, r5, r7, lr}
 138              		.cfi_def_cfa_offset 16
 139              		.cfi_offset 4, -16
 140              		.cfi_offset 5, -12
 141              		.cfi_offset 7, -8
 142              		.cfi_offset 14, -4
 143 0002 90B0     		sub	sp, sp, #64
 144              		.cfi_def_cfa_offset 80
 145 0004 00AF     		add	r7, sp, #0
 146              		.cfi_def_cfa_register 7
  40:sd_manager.c  **** 	/* power_isr note:
  41:sd_manager.c  **** 		Triggers unexpectedly due to floating pin/environmental voltages and
  42:sd_manager.c  **** 		capacitance. power isr is disabled for prototyping only.	*/
  43:sd_manager.c  **** 	power_comp_Start();
 147              		.loc 1 43 0
 148 0006 FFF7FEFF 		bl	power_comp_Start
  44:sd_manager.c  **** 	power_isr_ClearPending();
 149              		.loc 1 44 0
 150 000a FFF7FEFF 		bl	power_isr_ClearPending
  45:sd_manager.c  **** 	power_isr_StartEx(power_isr_custom);
 151              		.loc 1 45 0
 152 000e 2D48     		ldr	r0, .L10
 153 0010 FFF7FEFF 		bl	power_isr_StartEx
  46:sd_manager.c  **** 	sd_timer_Start();
 154              		.loc 1 46 0
 155 0014 FFF7FEFF 		bl	sd_timer_Start
  47:sd_manager.c  **** 	sd_isr_StartEx(sd_isr_custom);
 156              		.loc 1 47 0
 157 0018 2B48     		ldr	r0, .L10+4
 158 001a FFF7FEFF 		bl	sd_isr_StartEx
  48:sd_manager.c  ****     
  49:sd_manager.c  **** 	FS_Init();
 159              		.loc 1 49 0
 160 001e FFF7FEFF 		bl	FS_Init
  50:sd_manager.c  ****     FS_FAT_SupportLFN();            //enable long file name: filenames>8bytes
 161              		.loc 1 50 0
 162 0022 FFF7FEFF 		bl	FS_FAT_SupportLFN
  51:sd_manager.c  **** 	sd_ok = 1;
 163              		.loc 1 51 0
 164 0026 294B     		ldr	r3, .L10+8
 165 0028 0122     		movs	r2, #1
 166 002a 1A70     		strb	r2, [r3]
ARM GAS  D:\Windows\AppData\Local\Temp\cc9NldBr.s 			page 5


  52:sd_manager.c  **** 	char file_str[64];
  53:sd_manager.c  **** 
  54:sd_manager.c  **** 	if(FS_GetNumVolumes() == 1) {
 167              		.loc 1 54 0
 168 002c FFF7FEFF 		bl	FS_GetNumVolumes
 169 0030 0346     		mov	r3, r0
 170 0032 012B     		cmp	r3, #1
 171 0034 40D1     		bne	.L5
  55:sd_manager.c  **** 		FS_SetFileWriteMode(FS_WRITEMODE_FAST);
 172              		.loc 1 55 0
 173 0036 0220     		movs	r0, #2
 174 0038 FFF7FEFF 		bl	FS_SetFileWriteMode
  56:sd_manager.c  **** 		if((pfile = FS_FOpen(format_file, "r")) && FS_GetVolumeSize("") <= 0xFFFFFFFF)	//for FAT only
 175              		.loc 1 56 0
 176 003c 2448     		ldr	r0, .L10+12
 177 003e 2549     		ldr	r1, .L10+16
 178 0040 FFF7FEFF 		bl	FS_FOpen
 179 0044 0246     		mov	r2, r0
 180 0046 244B     		ldr	r3, .L10+20
 181 0048 1A60     		str	r2, [r3]
 182 004a 234B     		ldr	r3, .L10+20
 183 004c 1B68     		ldr	r3, [r3]
 184 004e 002B     		cmp	r3, #0
 185 0050 05D0     		beq	.L6
 186              		.loc 1 56 0 is_stmt 0 discriminator 1
 187 0052 2248     		ldr	r0, .L10+24
 188 0054 FFF7FEFF 		bl	FS_GetVolumeSize
  57:sd_manager.c  **** 			FS_FormatSD("");
 189              		.loc 1 57 0 is_stmt 1 discriminator 1
 190 0058 2048     		ldr	r0, .L10+24
 191 005a FFF7FEFF 		bl	FS_FormatSD
 192              	.L6:
  58:sd_manager.c  **** 		
  59:sd_manager.c  ****         //create logs folder
  60:sd_manager.c  **** 		if(FS_ATTR_DIRECTORY != FS_GetFileAttributes("test_folder")) { // if not a dir
 193              		.loc 1 60 0
 194 005e 2048     		ldr	r0, .L10+28
 195 0060 FFF7FEFF 		bl	FS_GetFileAttributes
 196 0064 0346     		mov	r3, r0
 197 0066 102B     		cmp	r3, #16
 198 0068 09D0     		beq	.L7
  61:sd_manager.c  **** 			if(FS_MkDir("test_folder")) {
 199              		.loc 1 61 0
 200 006a 1D48     		ldr	r0, .L10+28
 201 006c FFF7FEFF 		bl	FS_MkDir
 202 0070 0346     		mov	r3, r0
 203 0072 002B     		cmp	r3, #0
 204 0074 03D0     		beq	.L7
  62:sd_manager.c  **** 				sd_ok = 0;
 205              		.loc 1 62 0
 206 0076 154B     		ldr	r3, .L10+8
 207 0078 0022     		movs	r2, #0
 208 007a 1A70     		strb	r2, [r3]
  63:sd_manager.c  **** 				return;
 209              		.loc 1 63 0
 210 007c 1FE0     		b	.L4
 211              	.L7:
ARM GAS  D:\Windows\AppData\Local\Temp\cc9NldBr.s 			page 6


  64:sd_manager.c  **** 			} // if logs folder can't be created
  65:sd_manager.c  ****         }
  66:sd_manager.c  ****         
  67:sd_manager.c  ****         // create log file
  68:sd_manager.c  **** 		sprintf(file_str, "\\test_folder\\test_file.txt");
 212              		.loc 1 68 0
 213 007e 3B46     		mov	r3, r7
 214 0080 184A     		ldr	r2, .L10+32
 215 0082 1C46     		mov	r4, r3
 216 0084 1546     		mov	r5, r2
 217 0086 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 218 0088 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 219 008a 95E80700 		ldmia	r5, {r0, r1, r2}
 220 008e 03C4     		stmia	r4!, {r0, r1}
 221 0090 2280     		strh	r2, [r4]	@ movhi
 222 0092 0234     		adds	r4, r4, #2
 223 0094 130C     		lsrs	r3, r2, #16
 224 0096 2370     		strb	r3, [r4]
  69:sd_manager.c  **** 		pfile = FS_FOpen(file_str, "w"); //create and open new file for writing
 225              		.loc 1 69 0
 226 0098 3B46     		mov	r3, r7
 227 009a 1846     		mov	r0, r3
 228 009c 1249     		ldr	r1, .L10+36
 229 009e FFF7FEFF 		bl	FS_FOpen
 230 00a2 0246     		mov	r2, r0
 231 00a4 0C4B     		ldr	r3, .L10+20
 232 00a6 1A60     		str	r2, [r3]
  70:sd_manager.c  **** 		if(pfile == NULL) {
 233              		.loc 1 70 0
 234 00a8 0B4B     		ldr	r3, .L10+20
 235 00aa 1B68     		ldr	r3, [r3]
 236 00ac 002B     		cmp	r3, #0
 237 00ae 03D1     		bne	.L5
  71:sd_manager.c  **** 			sd_ok = 0;
 238              		.loc 1 71 0
 239 00b0 064B     		ldr	r3, .L10+8
 240 00b2 0022     		movs	r2, #0
 241 00b4 1A70     		strb	r2, [r3]
  72:sd_manager.c  **** 			return;
 242              		.loc 1 72 0
 243 00b6 02E0     		b	.L4
 244              	.L5:
  73:sd_manager.c  **** 		} // if file does not exist
  74:sd_manager.c  **** 
  75:sd_manager.c  **** 		// Set file time here
  76:sd_manager.c  **** 		//FS_FILETIME file_time;
  77:sd_manager.c  **** 		//unsigned long file_timestamp;
  78:sd_manager.c  **** 		/*
  79:sd_manager.c  **** 		file_time.Year = time.year;
  80:sd_manager.c  **** 		file_time.Month = time.month;
  81:sd_manager.c  **** 		file_time.Day = time.day;
  82:sd_manager.c  **** 		file_time.Hour = time.hour;
  83:sd_manager.c  **** 		file_time.Minute = time.minute;
  84:sd_manager.c  **** 		file_time.Second = time.second;
  85:sd_manager.c  **** 		*/
  86:sd_manager.c  **** 		//FS_FileTimeToTimeStamp(&file_time, &file_timestamp);
  87:sd_manager.c  **** 		//FS_SetFileTime(file_str, file_timestamp);
ARM GAS  D:\Windows\AppData\Local\Temp\cc9NldBr.s 			page 7


  88:sd_manager.c  **** 		/*FS_SetFileTimeEx(file_str, file_timestamp, FS_FILETIME_CREATE);	//doesnt work
  89:sd_manager.c  **** 		FS_SetFileTimeEx(file_str, file_timestamp, FS_FILETIME_ACCESS);
  90:sd_manager.c  **** 		FS_SetFileTimeEx(file_str, file_timestamp, FS_FILETIME_MODIFY);*/
  91:sd_manager.c  **** 	} // if a single file volume exists
  92:sd_manager.c  ****     FS_Sync("");
 245              		.loc 1 92 0
 246 00b8 0848     		ldr	r0, .L10+24
 247 00ba FFF7FEFF 		bl	FS_Sync
 248              	.L4:
  93:sd_manager.c  **** } // sd_init()
 249              		.loc 1 93 0
 250 00be 4037     		adds	r7, r7, #64
 251              		.cfi_def_cfa_offset 16
 252 00c0 BD46     		mov	sp, r7
 253              		.cfi_def_cfa_register 13
 254              		@ sp needed
 255 00c2 B0BD     		pop	{r4, r5, r7, pc}
 256              	.L11:
 257              		.align	2
 258              	.L10:
 259 00c4 00000000 		.word	power_isr_custom
 260 00c8 00000000 		.word	sd_isr_custom
 261 00cc 00000000 		.word	sd_ok
 262 00d0 00000000 		.word	format_file
 263 00d4 1C000000 		.word	.LC0
 264 00d8 00000000 		.word	pfile
 265 00dc 20000000 		.word	.LC1
 266 00e0 24000000 		.word	.LC2
 267 00e4 30000000 		.word	.LC3
 268 00e8 4C000000 		.word	.LC4
 269              		.cfi_endproc
 270              	.LFE65:
 271              		.size	sd_init, .-sd_init
 272              		.section	.rodata
 273 004e 0000     		.align	2
 274              	.LC5:
 275 0050 74657374 		.ascii	"test\012\000"
 275      0A00
 276              		.section	.text.sd_write,"ax",%progbits
 277              		.align	2
 278              		.global	sd_write
 279              		.thumb
 280              		.thumb_func
 281              		.type	sd_write, %function
 282              	sd_write:
 283              	.LFB66:
  94:sd_manager.c  **** 
  95:sd_manager.c  **** 
  96:sd_manager.c  **** 
  97:sd_manager.c  **** 
  98:sd_manager.c  **** 
  99:sd_manager.c  **** /* sd_write()
 100:sd_manager.c  **** 	Writes current to the SD card. 
 101:sd_manager.c  **** 	Synchronizes the filesystem after it is  written. */
 102:sd_manager.c  **** void sd_write() {
 284              		.loc 1 102 0
 285              		.cfi_startproc
ARM GAS  D:\Windows\AppData\Local\Temp\cc9NldBr.s 			page 8


 286              		@ args = 0, pretend = 0, frame = 72
 287              		@ frame_needed = 1, uses_anonymous_args = 0
 288 0000 80B5     		push	{r7, lr}
 289              		.cfi_def_cfa_offset 8
 290              		.cfi_offset 7, -8
 291              		.cfi_offset 14, -4
 292 0002 92B0     		sub	sp, sp, #72
 293              		.cfi_def_cfa_offset 80
 294 0004 00AF     		add	r7, sp, #0
 295              		.cfi_def_cfa_register 7
 103:sd_manager.c  **** 	if(!sd_ok) return;
 296              		.loc 1 103 0
 297 0006 184B     		ldr	r3, .L15
 298 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 299 000a 002B     		cmp	r3, #0
 300 000c 29D0     		beq	.L12
 104:sd_manager.c  **** 
 105:sd_manager.c  **** 	char buffer[64];
 106:sd_manager.c  **** 	short length = 0;
 301              		.loc 1 106 0
 302 000e 0023     		movs	r3, #0
 303 0010 A7F84630 		strh	r3, [r7, #70]	@ movhi
 107:sd_manager.c  **** 	
 108:sd_manager.c  ****     uint8_t atomic_state = CyEnterCriticalSection(); // BEGIN ATOMIC
 304              		.loc 1 108 0
 305 0014 FFF7FEFF 		bl	CyEnterCriticalSection
 306 0018 0346     		mov	r3, r0
 307 001a 87F84530 		strb	r3, [r7, #69]
 109:sd_manager.c  **** 	/*
 110:sd_manager.c  **** 	for(sd_head=0; sd_head<sd_tail; sd_head++) {
 111:sd_manager.c  **** 		length = sprintf(buffer, "%X,%u,%X,%X,%X,%X,%X,%X,%X,%X\n",
 112:sd_manager.c  **** 			(unsigned)sd_queue[sd_head].id,
 113:sd_manager.c  **** 			MILLI_PERIOD - (unsigned)sd_queue[sd_head].millicounter,
 114:sd_manager.c  **** 			(unsigned)sd_queue[sd_head].data[0],
 115:sd_manager.c  **** 			(unsigned)sd_queue[sd_head].data[1],
 116:sd_manager.c  **** 			(unsigned)sd_queue[sd_head].data[2],
 117:sd_manager.c  **** 			(unsigned)sd_queue[sd_head].data[3],
 118:sd_manager.c  **** 			(unsigned)sd_queue[sd_head].data[4],
 119:sd_manager.c  **** 			(unsigned)sd_queue[sd_head].data[5],
 120:sd_manager.c  **** 			(unsigned)sd_queue[sd_head].data[6],
 121:sd_manager.c  **** 			(unsigned)sd_queue[sd_head].data[7]);
 122:sd_manager.c  **** 
 123:sd_manager.c  **** 		FS_Write(pfile, buffer, length); // write to SD
 124:sd_manager.c  **** 	}
 125:sd_manager.c  **** 	*/
 126:sd_manager.c  **** 	length = sprintf(buffer, "test\n");
 308              		.loc 1 126 0
 309 001e 3B1D     		adds	r3, r7, #4
 310 0020 124A     		ldr	r2, .L15+4
 311 0022 92E80300 		ldmia	r2, {r0, r1}
 312 0026 1860     		str	r0, [r3]
 313 0028 0433     		adds	r3, r3, #4
 314 002a 1980     		strh	r1, [r3]	@ movhi
 315 002c 0523     		movs	r3, #5
 316 002e A7F84630 		strh	r3, [r7, #70]	@ movhi
 127:sd_manager.c  **** 	FS_Write(pfile, buffer, length); // write to SD
 317              		.loc 1 127 0
ARM GAS  D:\Windows\AppData\Local\Temp\cc9NldBr.s 			page 9


 318 0032 0F4B     		ldr	r3, .L15+8
 319 0034 1968     		ldr	r1, [r3]
 320 0036 B7F94630 		ldrsh	r3, [r7, #70]
 321 003a 3A1D     		adds	r2, r7, #4
 322 003c 0846     		mov	r0, r1
 323 003e 1146     		mov	r1, r2
 324 0040 1A46     		mov	r2, r3
 325 0042 FFF7FEFF 		bl	FS_Write
 128:sd_manager.c  **** 	FS_Sync(""); // sync to SD
 326              		.loc 1 128 0
 327 0046 0B48     		ldr	r0, .L15+12
 328 0048 FFF7FEFF 		bl	FS_Sync
 129:sd_manager.c  **** 	sd_head=0; sd_tail=0;
 329              		.loc 1 129 0
 330 004c 0A4B     		ldr	r3, .L15+16
 331 004e 0022     		movs	r2, #0
 332 0050 1A80     		strh	r2, [r3]	@ movhi
 333 0052 0A4B     		ldr	r3, .L15+20
 334 0054 0022     		movs	r2, #0
 335 0056 1A80     		strh	r2, [r3]	@ movhi
 130:sd_manager.c  ****     CyExitCriticalSection(atomic_state);               // END ATOMIC
 336              		.loc 1 130 0
 337 0058 97F84530 		ldrb	r3, [r7, #69]	@ zero_extendqisi2
 338 005c 1846     		mov	r0, r3
 339 005e FFF7FEFF 		bl	CyExitCriticalSection
 340              	.L12:
 131:sd_manager.c  **** } // sd_write()
 341              		.loc 1 131 0
 342 0062 4837     		adds	r7, r7, #72
 343              		.cfi_def_cfa_offset 8
 344 0064 BD46     		mov	sp, r7
 345              		.cfi_def_cfa_register 13
 346              		@ sp needed
 347 0066 80BD     		pop	{r7, pc}
 348              	.L16:
 349              		.align	2
 350              	.L15:
 351 0068 00000000 		.word	sd_ok
 352 006c 50000000 		.word	.LC5
 353 0070 00000000 		.word	pfile
 354 0074 20000000 		.word	.LC1
 355 0078 00000000 		.word	sd_head
 356 007c 00000000 		.word	sd_tail
 357              		.cfi_endproc
 358              	.LFE66:
 359              		.size	sd_write, .-sd_write
 360              		.section	.rodata
 361 0056 0000     		.align	2
 362              	.LC6:
 363 0058 5C424D53 		.ascii	"\\BMS\\SoC.txt\000"
 363      5C536F43 
 363      2E747874 
 363      00
 364              		.section	.text.sd_read,"ax",%progbits
 365              		.align	2
 366              		.global	sd_read
 367              		.thumb
ARM GAS  D:\Windows\AppData\Local\Temp\cc9NldBr.s 			page 10


 368              		.thumb_func
 369              		.type	sd_read, %function
 370              	sd_read:
 371              	.LFB67:
 132:sd_manager.c  **** 
 133:sd_manager.c  **** 
 134:sd_manager.c  **** void sd_read() {
 372              		.loc 1 134 0
 373              		.cfi_startproc
 374              		@ args = 0, pretend = 0, frame = 64
 375              		@ frame_needed = 1, uses_anonymous_args = 0
 376 0000 80B5     		push	{r7, lr}
 377              		.cfi_def_cfa_offset 8
 378              		.cfi_offset 7, -8
 379              		.cfi_offset 14, -4
 380 0002 90B0     		sub	sp, sp, #64
 381              		.cfi_def_cfa_offset 72
 382 0004 00AF     		add	r7, sp, #0
 383              		.cfi_def_cfa_register 7
 135:sd_manager.c  **** 	if((pfile = FS_FOpen("\\BMS\\SoC.txt", "r"))) {	//open file for reading
 384              		.loc 1 135 0
 385 0006 0D48     		ldr	r0, .L19
 386 0008 0D49     		ldr	r1, .L19+4
 387 000a FFF7FEFF 		bl	FS_FOpen
 388 000e 0246     		mov	r2, r0
 389 0010 0C4B     		ldr	r3, .L19+8
 390 0012 1A60     		str	r2, [r3]
 391 0014 0B4B     		ldr	r3, .L19+8
 392 0016 1B68     		ldr	r3, [r3]
 393 0018 002B     		cmp	r3, #0
 394 001a 0CD0     		beq	.L17
 395              	.LBB2:
 136:sd_manager.c  **** 		char buffer[64];
 137:sd_manager.c  **** 		//Time time;
 138:sd_manager.c  **** 		//DataPacket msg;
 139:sd_manager.c  **** 		FS_Read(pfile, buffer, 64); // read entire file
 396              		.loc 1 139 0
 397 001c 094B     		ldr	r3, .L19+8
 398 001e 1A68     		ldr	r2, [r3]
 399 0020 3B46     		mov	r3, r7
 400 0022 1046     		mov	r0, r2
 401 0024 1946     		mov	r1, r3
 402 0026 4022     		movs	r2, #64
 403 0028 FFF7FEFF 		bl	FS_Read
 140:sd_manager.c  **** 		FS_FClose(pfile);
 404              		.loc 1 140 0
 405 002c 054B     		ldr	r3, .L19+8
 406 002e 1B68     		ldr	r3, [r3]
 407 0030 1846     		mov	r0, r3
 408 0032 FFF7FEFF 		bl	FS_FClose
 409              	.L17:
 410              	.LBE2:
 141:sd_manager.c  **** 	}
 142:sd_manager.c  **** }
 411              		.loc 1 142 0
 412 0036 4037     		adds	r7, r7, #64
 413              		.cfi_def_cfa_offset 8
ARM GAS  D:\Windows\AppData\Local\Temp\cc9NldBr.s 			page 11


 414 0038 BD46     		mov	sp, r7
 415              		.cfi_def_cfa_register 13
 416              		@ sp needed
 417 003a 80BD     		pop	{r7, pc}
 418              	.L20:
 419              		.align	2
 420              	.L19:
 421 003c 58000000 		.word	.LC6
 422 0040 1C000000 		.word	.LC0
 423 0044 00000000 		.word	pfile
 424              		.cfi_endproc
 425              	.LFE67:
 426              		.size	sd_read, .-sd_read
 427              		.section	.text.sd_buffer,"ax",%progbits
 428              		.align	2
 429              		.global	sd_buffer
 430              		.thumb
 431              		.thumb_func
 432              		.type	sd_buffer, %function
 433              	sd_buffer:
 434              	.LFB68:
 143:sd_manager.c  **** 
 144:sd_manager.c  **** 
 145:sd_manager.c  **** void sd_buffer(DataPacket * msg) {
 435              		.loc 1 145 0
 436              		.cfi_startproc
 437              		@ args = 0, pretend = 0, frame = 8
 438              		@ frame_needed = 1, uses_anonymous_args = 0
 439              		@ link register save eliminated.
 440 0000 90B4     		push	{r4, r7}
 441              		.cfi_def_cfa_offset 8
 442              		.cfi_offset 4, -8
 443              		.cfi_offset 7, -4
 444 0002 82B0     		sub	sp, sp, #8
 445              		.cfi_def_cfa_offset 16
 446 0004 00AF     		add	r7, sp, #0
 447              		.cfi_def_cfa_register 7
 448 0006 7860     		str	r0, [r7, #4]
 146:sd_manager.c  **** 	sd_queue[sd_tail] = *msg;
 449              		.loc 1 146 0
 450 0008 0F4B     		ldr	r3, .L24
 451 000a 1B88     		ldrh	r3, [r3]
 452 000c 0F4A     		ldr	r2, .L24+4
 453 000e 1B01     		lsls	r3, r3, #4
 454 0010 1A44     		add	r2, r2, r3
 455 0012 7B68     		ldr	r3, [r7, #4]
 456 0014 1446     		mov	r4, r2
 457 0016 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 458 0018 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 147:sd_manager.c  **** 	if (sd_tail == SD_QUEUE_LENGTH-1)	//if buffer full stay at tail
 459              		.loc 1 147 0
 460 001c 0A4B     		ldr	r3, .L24
 461 001e 1B88     		ldrh	r3, [r3]
 462 0020 40F2FF32 		movw	r2, #1023
 463 0024 9342     		cmp	r3, r2
 464 0026 04D1     		bne	.L22
 148:sd_manager.c  **** 		sd_tail = sd_tail;
ARM GAS  D:\Windows\AppData\Local\Temp\cc9NldBr.s 			page 12


 465              		.loc 1 148 0
 466 0028 074B     		ldr	r3, .L24
 467 002a 1A88     		ldrh	r2, [r3]
 468 002c 064B     		ldr	r3, .L24
 469 002e 1A80     		strh	r2, [r3]	@ movhi
 470 0030 05E0     		b	.L21
 471              	.L22:
 149:sd_manager.c  **** 	else
 150:sd_manager.c  **** 		sd_tail++;	
 472              		.loc 1 150 0
 473 0032 054B     		ldr	r3, .L24
 474 0034 1B88     		ldrh	r3, [r3]
 475 0036 0133     		adds	r3, r3, #1
 476 0038 9AB2     		uxth	r2, r3
 477 003a 034B     		ldr	r3, .L24
 478 003c 1A80     		strh	r2, [r3]	@ movhi
 479              	.L21:
 151:sd_manager.c  **** }
 480              		.loc 1 151 0
 481 003e 0837     		adds	r7, r7, #8
 482              		.cfi_def_cfa_offset 8
 483 0040 BD46     		mov	sp, r7
 484              		.cfi_def_cfa_register 13
 485              		@ sp needed
 486 0042 90BC     		pop	{r4, r7}
 487              		.cfi_restore 7
 488              		.cfi_restore 4
 489              		.cfi_def_cfa_offset 0
 490 0044 7047     		bx	lr
 491              	.L25:
 492 0046 00BF     		.align	2
 493              	.L24:
 494 0048 00000000 		.word	sd_tail
 495 004c 00000000 		.word	sd_queue
 496              		.cfi_endproc
 497              	.LFE68:
 498              		.size	sd_buffer, .-sd_buffer
 499              		.section	.text.sd_stop,"ax",%progbits
 500              		.align	2
 501              		.global	sd_stop
 502              		.thumb
 503              		.thumb_func
 504              		.type	sd_stop, %function
 505              	sd_stop:
 506              	.LFB69:
 152:sd_manager.c  **** /* sd_stop()
 153:sd_manager.c  **** 	Takes and returns nothing.
 154:sd_manager.c  **** 	Closes the file, synchronizes, and unmounts SD card to prevent corruption.
 155:sd_manager.c  **** */
 156:sd_manager.c  **** void sd_stop(void) {
 507              		.loc 1 156 0
 508              		.cfi_startproc
 509              		@ args = 0, pretend = 0, frame = 0
 510              		@ frame_needed = 1, uses_anonymous_args = 0
 511 0000 80B5     		push	{r7, lr}
 512              		.cfi_def_cfa_offset 8
 513              		.cfi_offset 7, -8
ARM GAS  D:\Windows\AppData\Local\Temp\cc9NldBr.s 			page 13


 514              		.cfi_offset 14, -4
 515 0002 00AF     		add	r7, sp, #0
 516              		.cfi_def_cfa_register 7
 157:sd_manager.c  **** 	sd_write();
 517              		.loc 1 157 0
 518 0004 FFF7FEFF 		bl	sd_write
 158:sd_manager.c  **** 	FS_FClose(pfile);
 519              		.loc 1 158 0
 520 0008 054B     		ldr	r3, .L27
 521 000a 1B68     		ldr	r3, [r3]
 522 000c 1846     		mov	r0, r3
 523 000e FFF7FEFF 		bl	FS_FClose
 159:sd_manager.c  **** 	FS_Sync("");
 524              		.loc 1 159 0
 525 0012 0448     		ldr	r0, .L27+4
 526 0014 FFF7FEFF 		bl	FS_Sync
 160:sd_manager.c  **** 	FS_Unmount("");
 527              		.loc 1 160 0
 528 0018 0248     		ldr	r0, .L27+4
 529 001a FFF7FEFF 		bl	FS_Unmount
 161:sd_manager.c  **** } // sd_stop()
 530              		.loc 1 161 0
 531 001e 80BD     		pop	{r7, pc}
 532              	.L28:
 533              		.align	2
 534              	.L27:
 535 0020 00000000 		.word	pfile
 536 0024 20000000 		.word	.LC1
 537              		.cfi_endproc
 538              	.LFE69:
 539              		.size	sd_stop, .-sd_stop
 540              		.section	.rodata
 541 0065 000000   		.align	2
 542              	.LC7:
 543 0068 54797065 		.ascii	"Type,Time,Value,ID\012\000"
 543      2C54696D 
 543      652C5661 
 543      6C75652C 
 543      49440A00 
 544              		.align	2
 545              	.LC8:
 546 007c 25752C25 		.ascii	"%u,%X,%X,%u\012\000"
 546      582C2558 
 546      2C25750A 
 546      00
 547 0089 000000   		.section	.text.sd_writetest,"ax",%progbits
 548              		.align	2
 549              		.global	sd_writetest
 550              		.thumb
 551              		.thumb_func
 552              		.type	sd_writetest, %function
 553              	sd_writetest:
 554              	.LFB70:
 162:sd_manager.c  **** 
 163:sd_manager.c  **** 
 164:sd_manager.c  **** void sd_writetest() {
 555              		.loc 1 164 0
ARM GAS  D:\Windows\AppData\Local\Temp\cc9NldBr.s 			page 14


 556              		.cfi_startproc
 557              		@ args = 0, pretend = 0, frame = 136
 558              		@ frame_needed = 1, uses_anonymous_args = 0
 559 0000 80B5     		push	{r7, lr}
 560              		.cfi_def_cfa_offset 8
 561              		.cfi_offset 7, -8
 562              		.cfi_offset 14, -4
 563 0002 A4B0     		sub	sp, sp, #144
 564              		.cfi_def_cfa_offset 152
 565 0004 02AF     		add	r7, sp, #8
 566              		.cfi_def_cfa 7, 144
 165:sd_manager.c  **** 	// test data writing
 166:sd_manager.c  **** 	char buffer[128];
 167:sd_manager.c  **** 	short length = 0;
 567              		.loc 1 167 0
 568 0006 0023     		movs	r3, #0
 569 0008 A7F88630 		strh	r3, [r7, #134]	@ movhi
 168:sd_manager.c  **** 
 169:sd_manager.c  **** 	// test write
 170:sd_manager.c  **** 	FS_Write(pfile, "Type,Time,Value,ID\n", 19);
 570              		.loc 1 170 0
 571 000c 144B     		ldr	r3, .L30
 572 000e 1B68     		ldr	r3, [r3]
 573 0010 1846     		mov	r0, r3
 574 0012 1449     		ldr	r1, .L30+4
 575 0014 1322     		movs	r2, #19
 576 0016 FFF7FEFF 		bl	FS_Write
 171:sd_manager.c  **** 	length = sprintf(buffer, "%u,%X,%X,%u\n",
 577              		.loc 1 171 0
 578 001a 3A1D     		adds	r2, r7, #4
 579 001c 4FF0FF33 		mov	r3, #-1
 580 0020 0093     		str	r3, [sp]
 581 0022 E023     		movs	r3, #224
 582 0024 0193     		str	r3, [sp, #4]
 583 0026 1046     		mov	r0, r2
 584 0028 0F49     		ldr	r1, .L30+8
 585 002a 0122     		movs	r2, #1
 586 002c 4FF6FF73 		movw	r3, #65535
 587 0030 FFF7FEFF 		bl	sprintf
 588 0034 0346     		mov	r3, r0
 589 0036 A7F88630 		strh	r3, [r7, #134]	@ movhi
 172:sd_manager.c  **** 		1,0xFFFF, 0xFFFFFFFF, 224);
 173:sd_manager.c  **** 	FS_Write(pfile, buffer, length);
 590              		.loc 1 173 0
 591 003a 094B     		ldr	r3, .L30
 592 003c 1968     		ldr	r1, [r3]
 593 003e B7F98630 		ldrsh	r3, [r7, #134]
 594 0042 3A1D     		adds	r2, r7, #4
 595 0044 0846     		mov	r0, r1
 596 0046 1146     		mov	r1, r2
 597 0048 1A46     		mov	r2, r3
 598 004a FFF7FEFF 		bl	FS_Write
 174:sd_manager.c  **** 
 175:sd_manager.c  **** 	sd_stop(); // for testing
 599              		.loc 1 175 0
 600 004e FFF7FEFF 		bl	sd_stop
 176:sd_manager.c  **** 	sd_ok = 0; // for testing
ARM GAS  D:\Windows\AppData\Local\Temp\cc9NldBr.s 			page 15


 601              		.loc 1 176 0
 602 0052 064B     		ldr	r3, .L30+12
 603 0054 0022     		movs	r2, #0
 604 0056 1A70     		strb	r2, [r3]
 177:sd_manager.c  **** }//test_push
 605              		.loc 1 177 0
 606 0058 8837     		adds	r7, r7, #136
 607              		.cfi_def_cfa_offset 8
 608 005a BD46     		mov	sp, r7
 609              		.cfi_def_cfa_register 13
 610              		@ sp needed
 611 005c 80BD     		pop	{r7, pc}
 612              	.L31:
 613 005e 00BF     		.align	2
 614              	.L30:
 615 0060 00000000 		.word	pfile
 616 0064 68000000 		.word	.LC7
 617 0068 7C000000 		.word	.LC8
 618 006c 00000000 		.word	sd_ok
 619              		.cfi_endproc
 620              	.LFE70:
 621              		.size	sd_writetest, .-sd_writetest
 622              		.text
 623              	.Letext0:
 624              		.file 2 "d:\\programming\\cypress\\psoc creator\\4.0\\psoc creator\\import\\gnu\\arm\\4.9.3\\arm-n
 625              		.file 3 ".\\emFile_V322c\\Code\\Include\\PSoC5/FS_Types.h"
 626              		.file 4 "d:\\programming\\cypress\\psoc creator\\4.0\\psoc creator\\import\\gnu\\arm\\4.9.3\\arm-n
 627              		.file 5 "data.h"
 628              		.file 6 "Generated_Source\\PSoC5/core_cm3.h"
 629              		.file 7 ".\\emFile_V322c\\Code\\Include\\PSoC5/FS.h"
 630              		.section	.debug_info,"",%progbits
 631              	.Ldebug_info0:
 632 0000 69030000 		.4byte	0x369
 633 0004 0400     		.2byte	0x4
 634 0006 00000000 		.4byte	.Ldebug_abbrev0
 635 000a 04       		.byte	0x4
 636 000b 01       		.uleb128 0x1
 637 000c 89000000 		.4byte	.LASF47
 638 0010 01       		.byte	0x1
 639 0011 1C020000 		.4byte	.LASF48
 640 0015 0E000000 		.4byte	.LASF49
 641 0019 00000000 		.4byte	.Ldebug_ranges0+0
 642 001d 00000000 		.4byte	0
 643 0021 00000000 		.4byte	.Ldebug_line0
 644 0025 02       		.uleb128 0x2
 645 0026 01       		.byte	0x1
 646 0027 06       		.byte	0x6
 647 0028 C3020000 		.4byte	.LASF0
 648 002c 03       		.uleb128 0x3
 649 002d 51000000 		.4byte	.LASF3
 650 0031 02       		.byte	0x2
 651 0032 1D       		.byte	0x1d
 652 0033 37000000 		.4byte	0x37
 653 0037 02       		.uleb128 0x2
 654 0038 01       		.byte	0x1
 655 0039 08       		.byte	0x8
 656 003a 6E010000 		.4byte	.LASF1
ARM GAS  D:\Windows\AppData\Local\Temp\cc9NldBr.s 			page 16


 657 003e 02       		.uleb128 0x2
 658 003f 02       		.byte	0x2
 659 0040 05       		.byte	0x5
 660 0041 9F020000 		.4byte	.LASF2
 661 0045 03       		.uleb128 0x3
 662 0046 DB010000 		.4byte	.LASF4
 663 004a 02       		.byte	0x2
 664 004b 2B       		.byte	0x2b
 665 004c 50000000 		.4byte	0x50
 666 0050 02       		.uleb128 0x2
 667 0051 02       		.byte	0x2
 668 0052 07       		.byte	0x7
 669 0053 B1010000 		.4byte	.LASF5
 670 0057 03       		.uleb128 0x3
 671 0058 61000000 		.4byte	.LASF6
 672 005c 02       		.byte	0x2
 673 005d 3F       		.byte	0x3f
 674 005e 62000000 		.4byte	0x62
 675 0062 02       		.uleb128 0x2
 676 0063 04       		.byte	0x4
 677 0064 05       		.byte	0x5
 678 0065 B2020000 		.4byte	.LASF7
 679 0069 03       		.uleb128 0x3
 680 006a FA010000 		.4byte	.LASF8
 681 006e 02       		.byte	0x2
 682 006f 41       		.byte	0x41
 683 0070 74000000 		.4byte	0x74
 684 0074 02       		.uleb128 0x2
 685 0075 04       		.byte	0x4
 686 0076 07       		.byte	0x7
 687 0077 9F010000 		.4byte	.LASF9
 688 007b 02       		.uleb128 0x2
 689 007c 08       		.byte	0x8
 690 007d 05       		.byte	0x5
 691 007e 70020000 		.4byte	.LASF10
 692 0082 02       		.uleb128 0x2
 693 0083 08       		.byte	0x8
 694 0084 07       		.byte	0x7
 695 0085 D6020000 		.4byte	.LASF11
 696 0089 04       		.uleb128 0x4
 697 008a 04       		.byte	0x4
 698 008b 05       		.byte	0x5
 699 008c 696E7400 		.ascii	"int\000"
 700 0090 02       		.uleb128 0x2
 701 0091 04       		.byte	0x4
 702 0092 07       		.byte	0x7
 703 0093 17010000 		.4byte	.LASF12
 704 0097 02       		.uleb128 0x2
 705 0098 04       		.byte	0x4
 706 0099 07       		.byte	0x7
 707 009a 67020000 		.4byte	.LASF13
 708 009e 02       		.uleb128 0x2
 709 009f 01       		.byte	0x1
 710 00a0 08       		.byte	0x8
 711 00a1 34020000 		.4byte	.LASF14
 712 00a5 03       		.uleb128 0x3
 713 00a6 CA010000 		.4byte	.LASF15
ARM GAS  D:\Windows\AppData\Local\Temp\cc9NldBr.s 			page 17


 714 00aa 03       		.byte	0x3
 715 00ab 7E       		.byte	0x7e
 716 00ac B0000000 		.4byte	0xb0
 717 00b0 05       		.uleb128 0x5
 718 00b1 CA010000 		.4byte	.LASF15
 719 00b5 06       		.uleb128 0x6
 720 00b6 01       		.byte	0x1
 721 00b7 07       		.byte	0x7
 722 00b8 0601     		.2byte	0x106
 723 00ba D1000000 		.4byte	0xd1
 724 00be 07       		.uleb128 0x7
 725 00bf 6B000000 		.4byte	.LASF16
 726 00c3 00       		.sleb128 0
 727 00c4 07       		.uleb128 0x7
 728 00c5 5A010000 		.4byte	.LASF17
 729 00c9 01       		.sleb128 1
 730 00ca 07       		.uleb128 0x7
 731 00cb 8D010000 		.4byte	.LASF18
 732 00cf 02       		.sleb128 2
 733 00d0 00       		.byte	0
 734 00d1 08       		.uleb128 0x8
 735 00d2 04       		.byte	0x4
 736 00d3 A5000000 		.4byte	0xa5
 737 00d7 03       		.uleb128 0x3
 738 00d8 39020000 		.4byte	.LASF19
 739 00dc 04       		.byte	0x4
 740 00dd 15       		.byte	0x15
 741 00de 2C000000 		.4byte	0x2c
 742 00e2 03       		.uleb128 0x3
 743 00e3 96020000 		.4byte	.LASF20
 744 00e7 04       		.byte	0x4
 745 00e8 21       		.byte	0x21
 746 00e9 45000000 		.4byte	0x45
 747 00ed 03       		.uleb128 0x3
 748 00ee 5F020000 		.4byte	.LASF21
 749 00f2 04       		.byte	0x4
 750 00f3 2C       		.byte	0x2c
 751 00f4 57000000 		.4byte	0x57
 752 00f8 03       		.uleb128 0x3
 753 00f9 A9020000 		.4byte	.LASF22
 754 00fd 04       		.byte	0x4
 755 00fe 2D       		.byte	0x2d
 756 00ff 69000000 		.4byte	0x69
 757 0103 02       		.uleb128 0x2
 758 0104 04       		.byte	0x4
 759 0105 04       		.byte	0x4
 760 0106 4F010000 		.4byte	.LASF23
 761 010a 02       		.uleb128 0x2
 762 010b 08       		.byte	0x8
 763 010c 04       		.byte	0x4
 764 010d E6010000 		.4byte	.LASF24
 765 0111 09       		.uleb128 0x9
 766 0112 10       		.byte	0x10
 767 0113 05       		.byte	0x5
 768 0114 0A       		.byte	0xa
 769 0115 49010000 		.4byte	0x149
 770 0119 0A       		.uleb128 0xa
ARM GAS  D:\Windows\AppData\Local\Temp\cc9NldBr.s 			page 18


 771 011a 42010000 		.4byte	.LASF25
 772 011e 05       		.byte	0x5
 773 011f 0B       		.byte	0xb
 774 0120 F8000000 		.4byte	0xf8
 775 0124 00       		.byte	0
 776 0125 0B       		.uleb128 0xb
 777 0126 696400   		.ascii	"id\000"
 778 0129 05       		.byte	0x5
 779 012a 0C       		.byte	0xc
 780 012b E2000000 		.4byte	0xe2
 781 012f 04       		.byte	0x4
 782 0130 0A       		.uleb128 0xa
 783 0131 CF020000 		.4byte	.LASF26
 784 0135 05       		.byte	0x5
 785 0136 0D       		.byte	0xd
 786 0137 D7000000 		.4byte	0xd7
 787 013b 06       		.byte	0x6
 788 013c 0A       		.uleb128 0xa
 789 013d 55010000 		.4byte	.LASF27
 790 0141 05       		.byte	0x5
 791 0142 0E       		.byte	0xe
 792 0143 49010000 		.4byte	0x149
 793 0147 07       		.byte	0x7
 794 0148 00       		.byte	0
 795 0149 0C       		.uleb128 0xc
 796 014a D7000000 		.4byte	0xd7
 797 014e 59010000 		.4byte	0x159
 798 0152 0D       		.uleb128 0xd
 799 0153 97000000 		.4byte	0x97
 800 0157 07       		.byte	0x7
 801 0158 00       		.byte	0
 802 0159 03       		.uleb128 0x3
 803 015a 29020000 		.4byte	.LASF28
 804 015e 05       		.byte	0x5
 805 015f 0F       		.byte	0xf
 806 0160 11010000 		.4byte	0x111
 807 0164 0E       		.uleb128 0xe
 808 0165 7E020000 		.4byte	.LASF29
 809 0169 01       		.byte	0x1
 810 016a 0E       		.byte	0xe
 811 016b 00000000 		.4byte	.LFB63
 812 016f 16000000 		.4byte	.LFE63-.LFB63
 813 0173 01       		.uleb128 0x1
 814 0174 9C       		.byte	0x9c
 815 0175 0E       		.uleb128 0xe
 816 0176 2C010000 		.4byte	.LASF30
 817 017a 01       		.byte	0x1
 818 017b 17       		.byte	0x17
 819 017c 00000000 		.4byte	.LFB64
 820 0180 0A000000 		.4byte	.LFE64-.LFB64
 821 0184 01       		.uleb128 0x1
 822 0185 9C       		.byte	0x9c
 823 0186 0F       		.uleb128 0xf
 824 0187 BB020000 		.4byte	.LASF31
 825 018b 01       		.byte	0x1
 826 018c 27       		.byte	0x27
 827 018d 00000000 		.4byte	.LFB65
ARM GAS  D:\Windows\AppData\Local\Temp\cc9NldBr.s 			page 19


 828 0191 EC000000 		.4byte	.LFE65-.LFB65
 829 0195 01       		.uleb128 0x1
 830 0196 9C       		.byte	0x9c
 831 0197 AB010000 		.4byte	0x1ab
 832 019b 10       		.uleb128 0x10
 833 019c D2010000 		.4byte	.LASF33
 834 01a0 01       		.byte	0x1
 835 01a1 34       		.byte	0x34
 836 01a2 AB010000 		.4byte	0x1ab
 837 01a6 03       		.uleb128 0x3
 838 01a7 91       		.byte	0x91
 839 01a8 B07F     		.sleb128 -80
 840 01aa 00       		.byte	0
 841 01ab 0C       		.uleb128 0xc
 842 01ac 9E000000 		.4byte	0x9e
 843 01b0 BB010000 		.4byte	0x1bb
 844 01b4 0D       		.uleb128 0xd
 845 01b5 97000000 		.4byte	0x97
 846 01b9 3F       		.byte	0x3f
 847 01ba 00       		.byte	0
 848 01bb 0F       		.uleb128 0xf
 849 01bc 7C010000 		.4byte	.LASF32
 850 01c0 01       		.byte	0x1
 851 01c1 66       		.byte	0x66
 852 01c2 00000000 		.4byte	.LFB66
 853 01c6 80000000 		.4byte	.LFE66-.LFB66
 854 01ca 01       		.uleb128 0x1
 855 01cb 9C       		.byte	0x9c
 856 01cc FC010000 		.4byte	0x1fc
 857 01d0 10       		.uleb128 0x10
 858 01d1 8F020000 		.4byte	.LASF34
 859 01d5 01       		.byte	0x1
 860 01d6 69       		.byte	0x69
 861 01d7 AB010000 		.4byte	0x1ab
 862 01db 03       		.uleb128 0x3
 863 01dc 91       		.byte	0x91
 864 01dd B47F     		.sleb128 -76
 865 01df 10       		.uleb128 0x10
 866 01e0 CF020000 		.4byte	.LASF26
 867 01e4 01       		.byte	0x1
 868 01e5 6A       		.byte	0x6a
 869 01e6 3E000000 		.4byte	0x3e
 870 01ea 02       		.uleb128 0x2
 871 01eb 91       		.byte	0x91
 872 01ec 76       		.sleb128 -10
 873 01ed 10       		.uleb128 0x10
 874 01ee 0F020000 		.4byte	.LASF35
 875 01f2 01       		.byte	0x1
 876 01f3 6C       		.byte	0x6c
 877 01f4 D7000000 		.4byte	0xd7
 878 01f8 02       		.uleb128 0x2
 879 01f9 91       		.byte	0x91
 880 01fa 75       		.sleb128 -11
 881 01fb 00       		.byte	0
 882 01fc 0F       		.uleb128 0xf
 883 01fd 85010000 		.4byte	.LASF36
 884 0201 01       		.byte	0x1
ARM GAS  D:\Windows\AppData\Local\Temp\cc9NldBr.s 			page 20


 885 0202 86       		.byte	0x86
 886 0203 00000000 		.4byte	.LFB67
 887 0207 48000000 		.4byte	.LFE67-.LFB67
 888 020b 01       		.uleb128 0x1
 889 020c 9C       		.byte	0x9c
 890 020d 2B020000 		.4byte	0x22b
 891 0211 11       		.uleb128 0x11
 892 0212 1C000000 		.4byte	.LBB2
 893 0216 1A000000 		.4byte	.LBE2-.LBB2
 894 021a 10       		.uleb128 0x10
 895 021b 8F020000 		.4byte	.LASF34
 896 021f 01       		.byte	0x1
 897 0220 88       		.byte	0x88
 898 0221 AB010000 		.4byte	0x1ab
 899 0225 03       		.uleb128 0x3
 900 0226 91       		.byte	0x91
 901 0227 B87F     		.sleb128 -72
 902 0229 00       		.byte	0
 903 022a 00       		.byte	0
 904 022b 12       		.uleb128 0x12
 905 022c 05020000 		.4byte	.LASF50
 906 0230 01       		.byte	0x1
 907 0231 91       		.byte	0x91
 908 0232 00000000 		.4byte	.LFB68
 909 0236 50000000 		.4byte	.LFE68-.LFB68
 910 023a 01       		.uleb128 0x1
 911 023b 9C       		.byte	0x9c
 912 023c 4F020000 		.4byte	0x24f
 913 0240 13       		.uleb128 0x13
 914 0241 6D736700 		.ascii	"msg\000"
 915 0245 01       		.byte	0x1
 916 0246 91       		.byte	0x91
 917 0247 4F020000 		.4byte	0x24f
 918 024b 02       		.uleb128 0x2
 919 024c 91       		.byte	0x91
 920 024d 74       		.sleb128 -12
 921 024e 00       		.byte	0
 922 024f 08       		.uleb128 0x8
 923 0250 04       		.byte	0x4
 924 0251 59010000 		.4byte	0x159
 925 0255 0E       		.uleb128 0xe
 926 0256 3A010000 		.4byte	.LASF37
 927 025a 01       		.byte	0x1
 928 025b 9C       		.byte	0x9c
 929 025c 00000000 		.4byte	.LFB69
 930 0260 28000000 		.4byte	.LFE69-.LFB69
 931 0264 01       		.uleb128 0x1
 932 0265 9C       		.byte	0x9c
 933 0266 0F       		.uleb128 0xf
 934 0267 ED010000 		.4byte	.LASF38
 935 026b 01       		.byte	0x1
 936 026c A4       		.byte	0xa4
 937 026d 00000000 		.4byte	.LFB70
 938 0271 70000000 		.4byte	.LFE70-.LFB70
 939 0275 01       		.uleb128 0x1
 940 0276 9C       		.byte	0x9c
 941 0277 99020000 		.4byte	0x299
ARM GAS  D:\Windows\AppData\Local\Temp\cc9NldBr.s 			page 21


 942 027b 10       		.uleb128 0x10
 943 027c 8F020000 		.4byte	.LASF34
 944 0280 01       		.byte	0x1
 945 0281 A6       		.byte	0xa6
 946 0282 99020000 		.4byte	0x299
 947 0286 03       		.uleb128 0x3
 948 0287 91       		.byte	0x91
 949 0288 F47E     		.sleb128 -140
 950 028a 10       		.uleb128 0x10
 951 028b CF020000 		.4byte	.LASF26
 952 028f 01       		.byte	0x1
 953 0290 A7       		.byte	0xa7
 954 0291 3E000000 		.4byte	0x3e
 955 0295 02       		.uleb128 0x2
 956 0296 91       		.byte	0x91
 957 0297 76       		.sleb128 -10
 958 0298 00       		.byte	0
 959 0299 0C       		.uleb128 0xc
 960 029a 9E000000 		.4byte	0x9e
 961 029e A9020000 		.4byte	0x2a9
 962 02a2 0D       		.uleb128 0xd
 963 02a3 97000000 		.4byte	0x97
 964 02a7 7F       		.byte	0x7f
 965 02a8 00       		.byte	0
 966 02a9 14       		.uleb128 0x14
 967 02aa 52020000 		.4byte	.LASF39
 968 02ae 06       		.byte	0x6
 969 02af 9606     		.2byte	0x696
 970 02b1 B5020000 		.4byte	0x2b5
 971 02b5 15       		.uleb128 0x15
 972 02b6 ED000000 		.4byte	0xed
 973 02ba 16       		.uleb128 0x16
 974 02bb 5B000000 		.4byte	.LASF40
 975 02bf 01       		.byte	0x1
 976 02c0 04       		.byte	0x4
 977 02c1 D1000000 		.4byte	0xd1
 978 02c5 05       		.uleb128 0x5
 979 02c6 03       		.byte	0x3
 980 02c7 00000000 		.4byte	pfile
 981 02cb 16       		.uleb128 0x16
 982 02cc C4010000 		.4byte	.LASF41
 983 02d0 01       		.byte	0x1
 984 02d1 05       		.byte	0x5
 985 02d2 D7000000 		.4byte	0xd7
 986 02d6 05       		.uleb128 0x5
 987 02d7 03       		.byte	0x3
 988 02d8 00000000 		.4byte	sd_ok
 989 02dc 0C       		.uleb128 0xc
 990 02dd 9E000000 		.4byte	0x9e
 991 02e1 EC020000 		.4byte	0x2ec
 992 02e5 0D       		.uleb128 0xd
 993 02e6 97000000 		.4byte	0x97
 994 02ea 0D       		.byte	0xd
 995 02eb 00       		.byte	0
 996 02ec 16       		.uleb128 0x16
 997 02ed 00000000 		.4byte	.LASF42
 998 02f1 01       		.byte	0x1
ARM GAS  D:\Windows\AppData\Local\Temp\cc9NldBr.s 			page 22


 999 02f2 07       		.byte	0x7
 1000 02f3 FD020000 		.4byte	0x2fd
 1001 02f7 05       		.uleb128 0x5
 1002 02f8 03       		.byte	0x3
 1003 02f9 00000000 		.4byte	set_time_file
 1004 02fd 17       		.uleb128 0x17
 1005 02fe DC020000 		.4byte	0x2dc
 1006 0302 0C       		.uleb128 0xc
 1007 0303 9E000000 		.4byte	0x9e
 1008 0307 12030000 		.4byte	0x312
 1009 030b 0D       		.uleb128 0xd
 1010 030c 97000000 		.4byte	0x97
 1011 0310 0B       		.byte	0xb
 1012 0311 00       		.byte	0
 1013 0312 16       		.uleb128 0x16
 1014 0313 7D000000 		.4byte	.LASF43
 1015 0317 01       		.byte	0x1
 1016 0318 08       		.byte	0x8
 1017 0319 23030000 		.4byte	0x323
 1018 031d 05       		.uleb128 0x5
 1019 031e 03       		.byte	0x3
 1020 031f 00000000 		.4byte	format_file
 1021 0323 17       		.uleb128 0x17
 1022 0324 02030000 		.4byte	0x302
 1023 0328 0C       		.uleb128 0xc
 1024 0329 59010000 		.4byte	0x159
 1025 032d 39030000 		.4byte	0x339
 1026 0331 18       		.uleb128 0x18
 1027 0332 97000000 		.4byte	0x97
 1028 0336 FF03     		.2byte	0x3ff
 1029 0338 00       		.byte	0
 1030 0339 16       		.uleb128 0x16
 1031 033a 41020000 		.4byte	.LASF44
 1032 033e 01       		.byte	0x1
 1033 033f 0A       		.byte	0xa
 1034 0340 28030000 		.4byte	0x328
 1035 0344 05       		.uleb128 0x5
 1036 0345 03       		.byte	0x3
 1037 0346 00000000 		.4byte	sd_queue
 1038 034a 16       		.uleb128 0x16
 1039 034b 24010000 		.4byte	.LASF45
 1040 034f 01       		.byte	0x1
 1041 0350 0B       		.byte	0xb
 1042 0351 E2000000 		.4byte	0xe2
 1043 0355 05       		.uleb128 0x5
 1044 0356 03       		.byte	0x3
 1045 0357 00000000 		.4byte	sd_head
 1046 035b 16       		.uleb128 0x16
 1047 035c 4A020000 		.4byte	.LASF46
 1048 0360 01       		.byte	0x1
 1049 0361 0B       		.byte	0xb
 1050 0362 E2000000 		.4byte	0xe2
 1051 0366 05       		.uleb128 0x5
 1052 0367 03       		.byte	0x3
 1053 0368 00000000 		.4byte	sd_tail
 1054 036c 00       		.byte	0
 1055              		.section	.debug_abbrev,"",%progbits
ARM GAS  D:\Windows\AppData\Local\Temp\cc9NldBr.s 			page 23


 1056              	.Ldebug_abbrev0:
 1057 0000 01       		.uleb128 0x1
 1058 0001 11       		.uleb128 0x11
 1059 0002 01       		.byte	0x1
 1060 0003 25       		.uleb128 0x25
 1061 0004 0E       		.uleb128 0xe
 1062 0005 13       		.uleb128 0x13
 1063 0006 0B       		.uleb128 0xb
 1064 0007 03       		.uleb128 0x3
 1065 0008 0E       		.uleb128 0xe
 1066 0009 1B       		.uleb128 0x1b
 1067 000a 0E       		.uleb128 0xe
 1068 000b 55       		.uleb128 0x55
 1069 000c 17       		.uleb128 0x17
 1070 000d 11       		.uleb128 0x11
 1071 000e 01       		.uleb128 0x1
 1072 000f 10       		.uleb128 0x10
 1073 0010 17       		.uleb128 0x17
 1074 0011 00       		.byte	0
 1075 0012 00       		.byte	0
 1076 0013 02       		.uleb128 0x2
 1077 0014 24       		.uleb128 0x24
 1078 0015 00       		.byte	0
 1079 0016 0B       		.uleb128 0xb
 1080 0017 0B       		.uleb128 0xb
 1081 0018 3E       		.uleb128 0x3e
 1082 0019 0B       		.uleb128 0xb
 1083 001a 03       		.uleb128 0x3
 1084 001b 0E       		.uleb128 0xe
 1085 001c 00       		.byte	0
 1086 001d 00       		.byte	0
 1087 001e 03       		.uleb128 0x3
 1088 001f 16       		.uleb128 0x16
 1089 0020 00       		.byte	0
 1090 0021 03       		.uleb128 0x3
 1091 0022 0E       		.uleb128 0xe
 1092 0023 3A       		.uleb128 0x3a
 1093 0024 0B       		.uleb128 0xb
 1094 0025 3B       		.uleb128 0x3b
 1095 0026 0B       		.uleb128 0xb
 1096 0027 49       		.uleb128 0x49
 1097 0028 13       		.uleb128 0x13
 1098 0029 00       		.byte	0
 1099 002a 00       		.byte	0
 1100 002b 04       		.uleb128 0x4
 1101 002c 24       		.uleb128 0x24
 1102 002d 00       		.byte	0
 1103 002e 0B       		.uleb128 0xb
 1104 002f 0B       		.uleb128 0xb
 1105 0030 3E       		.uleb128 0x3e
 1106 0031 0B       		.uleb128 0xb
 1107 0032 03       		.uleb128 0x3
 1108 0033 08       		.uleb128 0x8
 1109 0034 00       		.byte	0
 1110 0035 00       		.byte	0
 1111 0036 05       		.uleb128 0x5
 1112 0037 13       		.uleb128 0x13
ARM GAS  D:\Windows\AppData\Local\Temp\cc9NldBr.s 			page 24


 1113 0038 00       		.byte	0
 1114 0039 03       		.uleb128 0x3
 1115 003a 0E       		.uleb128 0xe
 1116 003b 3C       		.uleb128 0x3c
 1117 003c 19       		.uleb128 0x19
 1118 003d 00       		.byte	0
 1119 003e 00       		.byte	0
 1120 003f 06       		.uleb128 0x6
 1121 0040 04       		.uleb128 0x4
 1122 0041 01       		.byte	0x1
 1123 0042 0B       		.uleb128 0xb
 1124 0043 0B       		.uleb128 0xb
 1125 0044 3A       		.uleb128 0x3a
 1126 0045 0B       		.uleb128 0xb
 1127 0046 3B       		.uleb128 0x3b
 1128 0047 05       		.uleb128 0x5
 1129 0048 01       		.uleb128 0x1
 1130 0049 13       		.uleb128 0x13
 1131 004a 00       		.byte	0
 1132 004b 00       		.byte	0
 1133 004c 07       		.uleb128 0x7
 1134 004d 28       		.uleb128 0x28
 1135 004e 00       		.byte	0
 1136 004f 03       		.uleb128 0x3
 1137 0050 0E       		.uleb128 0xe
 1138 0051 1C       		.uleb128 0x1c
 1139 0052 0D       		.uleb128 0xd
 1140 0053 00       		.byte	0
 1141 0054 00       		.byte	0
 1142 0055 08       		.uleb128 0x8
 1143 0056 0F       		.uleb128 0xf
 1144 0057 00       		.byte	0
 1145 0058 0B       		.uleb128 0xb
 1146 0059 0B       		.uleb128 0xb
 1147 005a 49       		.uleb128 0x49
 1148 005b 13       		.uleb128 0x13
 1149 005c 00       		.byte	0
 1150 005d 00       		.byte	0
 1151 005e 09       		.uleb128 0x9
 1152 005f 13       		.uleb128 0x13
 1153 0060 01       		.byte	0x1
 1154 0061 0B       		.uleb128 0xb
 1155 0062 0B       		.uleb128 0xb
 1156 0063 3A       		.uleb128 0x3a
 1157 0064 0B       		.uleb128 0xb
 1158 0065 3B       		.uleb128 0x3b
 1159 0066 0B       		.uleb128 0xb
 1160 0067 01       		.uleb128 0x1
 1161 0068 13       		.uleb128 0x13
 1162 0069 00       		.byte	0
 1163 006a 00       		.byte	0
 1164 006b 0A       		.uleb128 0xa
 1165 006c 0D       		.uleb128 0xd
 1166 006d 00       		.byte	0
 1167 006e 03       		.uleb128 0x3
 1168 006f 0E       		.uleb128 0xe
 1169 0070 3A       		.uleb128 0x3a
ARM GAS  D:\Windows\AppData\Local\Temp\cc9NldBr.s 			page 25


 1170 0071 0B       		.uleb128 0xb
 1171 0072 3B       		.uleb128 0x3b
 1172 0073 0B       		.uleb128 0xb
 1173 0074 49       		.uleb128 0x49
 1174 0075 13       		.uleb128 0x13
 1175 0076 38       		.uleb128 0x38
 1176 0077 0B       		.uleb128 0xb
 1177 0078 00       		.byte	0
 1178 0079 00       		.byte	0
 1179 007a 0B       		.uleb128 0xb
 1180 007b 0D       		.uleb128 0xd
 1181 007c 00       		.byte	0
 1182 007d 03       		.uleb128 0x3
 1183 007e 08       		.uleb128 0x8
 1184 007f 3A       		.uleb128 0x3a
 1185 0080 0B       		.uleb128 0xb
 1186 0081 3B       		.uleb128 0x3b
 1187 0082 0B       		.uleb128 0xb
 1188 0083 49       		.uleb128 0x49
 1189 0084 13       		.uleb128 0x13
 1190 0085 38       		.uleb128 0x38
 1191 0086 0B       		.uleb128 0xb
 1192 0087 00       		.byte	0
 1193 0088 00       		.byte	0
 1194 0089 0C       		.uleb128 0xc
 1195 008a 01       		.uleb128 0x1
 1196 008b 01       		.byte	0x1
 1197 008c 49       		.uleb128 0x49
 1198 008d 13       		.uleb128 0x13
 1199 008e 01       		.uleb128 0x1
 1200 008f 13       		.uleb128 0x13
 1201 0090 00       		.byte	0
 1202 0091 00       		.byte	0
 1203 0092 0D       		.uleb128 0xd
 1204 0093 21       		.uleb128 0x21
 1205 0094 00       		.byte	0
 1206 0095 49       		.uleb128 0x49
 1207 0096 13       		.uleb128 0x13
 1208 0097 2F       		.uleb128 0x2f
 1209 0098 0B       		.uleb128 0xb
 1210 0099 00       		.byte	0
 1211 009a 00       		.byte	0
 1212 009b 0E       		.uleb128 0xe
 1213 009c 2E       		.uleb128 0x2e
 1214 009d 00       		.byte	0
 1215 009e 3F       		.uleb128 0x3f
 1216 009f 19       		.uleb128 0x19
 1217 00a0 03       		.uleb128 0x3
 1218 00a1 0E       		.uleb128 0xe
 1219 00a2 3A       		.uleb128 0x3a
 1220 00a3 0B       		.uleb128 0xb
 1221 00a4 3B       		.uleb128 0x3b
 1222 00a5 0B       		.uleb128 0xb
 1223 00a6 27       		.uleb128 0x27
 1224 00a7 19       		.uleb128 0x19
 1225 00a8 11       		.uleb128 0x11
 1226 00a9 01       		.uleb128 0x1
ARM GAS  D:\Windows\AppData\Local\Temp\cc9NldBr.s 			page 26


 1227 00aa 12       		.uleb128 0x12
 1228 00ab 06       		.uleb128 0x6
 1229 00ac 40       		.uleb128 0x40
 1230 00ad 18       		.uleb128 0x18
 1231 00ae 9642     		.uleb128 0x2116
 1232 00b0 19       		.uleb128 0x19
 1233 00b1 00       		.byte	0
 1234 00b2 00       		.byte	0
 1235 00b3 0F       		.uleb128 0xf
 1236 00b4 2E       		.uleb128 0x2e
 1237 00b5 01       		.byte	0x1
 1238 00b6 3F       		.uleb128 0x3f
 1239 00b7 19       		.uleb128 0x19
 1240 00b8 03       		.uleb128 0x3
 1241 00b9 0E       		.uleb128 0xe
 1242 00ba 3A       		.uleb128 0x3a
 1243 00bb 0B       		.uleb128 0xb
 1244 00bc 3B       		.uleb128 0x3b
 1245 00bd 0B       		.uleb128 0xb
 1246 00be 11       		.uleb128 0x11
 1247 00bf 01       		.uleb128 0x1
 1248 00c0 12       		.uleb128 0x12
 1249 00c1 06       		.uleb128 0x6
 1250 00c2 40       		.uleb128 0x40
 1251 00c3 18       		.uleb128 0x18
 1252 00c4 9642     		.uleb128 0x2116
 1253 00c6 19       		.uleb128 0x19
 1254 00c7 01       		.uleb128 0x1
 1255 00c8 13       		.uleb128 0x13
 1256 00c9 00       		.byte	0
 1257 00ca 00       		.byte	0
 1258 00cb 10       		.uleb128 0x10
 1259 00cc 34       		.uleb128 0x34
 1260 00cd 00       		.byte	0
 1261 00ce 03       		.uleb128 0x3
 1262 00cf 0E       		.uleb128 0xe
 1263 00d0 3A       		.uleb128 0x3a
 1264 00d1 0B       		.uleb128 0xb
 1265 00d2 3B       		.uleb128 0x3b
 1266 00d3 0B       		.uleb128 0xb
 1267 00d4 49       		.uleb128 0x49
 1268 00d5 13       		.uleb128 0x13
 1269 00d6 02       		.uleb128 0x2
 1270 00d7 18       		.uleb128 0x18
 1271 00d8 00       		.byte	0
 1272 00d9 00       		.byte	0
 1273 00da 11       		.uleb128 0x11
 1274 00db 0B       		.uleb128 0xb
 1275 00dc 01       		.byte	0x1
 1276 00dd 11       		.uleb128 0x11
 1277 00de 01       		.uleb128 0x1
 1278 00df 12       		.uleb128 0x12
 1279 00e0 06       		.uleb128 0x6
 1280 00e1 00       		.byte	0
 1281 00e2 00       		.byte	0
 1282 00e3 12       		.uleb128 0x12
 1283 00e4 2E       		.uleb128 0x2e
ARM GAS  D:\Windows\AppData\Local\Temp\cc9NldBr.s 			page 27


 1284 00e5 01       		.byte	0x1
 1285 00e6 3F       		.uleb128 0x3f
 1286 00e7 19       		.uleb128 0x19
 1287 00e8 03       		.uleb128 0x3
 1288 00e9 0E       		.uleb128 0xe
 1289 00ea 3A       		.uleb128 0x3a
 1290 00eb 0B       		.uleb128 0xb
 1291 00ec 3B       		.uleb128 0x3b
 1292 00ed 0B       		.uleb128 0xb
 1293 00ee 27       		.uleb128 0x27
 1294 00ef 19       		.uleb128 0x19
 1295 00f0 11       		.uleb128 0x11
 1296 00f1 01       		.uleb128 0x1
 1297 00f2 12       		.uleb128 0x12
 1298 00f3 06       		.uleb128 0x6
 1299 00f4 40       		.uleb128 0x40
 1300 00f5 18       		.uleb128 0x18
 1301 00f6 9742     		.uleb128 0x2117
 1302 00f8 19       		.uleb128 0x19
 1303 00f9 01       		.uleb128 0x1
 1304 00fa 13       		.uleb128 0x13
 1305 00fb 00       		.byte	0
 1306 00fc 00       		.byte	0
 1307 00fd 13       		.uleb128 0x13
 1308 00fe 05       		.uleb128 0x5
 1309 00ff 00       		.byte	0
 1310 0100 03       		.uleb128 0x3
 1311 0101 08       		.uleb128 0x8
 1312 0102 3A       		.uleb128 0x3a
 1313 0103 0B       		.uleb128 0xb
 1314 0104 3B       		.uleb128 0x3b
 1315 0105 0B       		.uleb128 0xb
 1316 0106 49       		.uleb128 0x49
 1317 0107 13       		.uleb128 0x13
 1318 0108 02       		.uleb128 0x2
 1319 0109 18       		.uleb128 0x18
 1320 010a 00       		.byte	0
 1321 010b 00       		.byte	0
 1322 010c 14       		.uleb128 0x14
 1323 010d 34       		.uleb128 0x34
 1324 010e 00       		.byte	0
 1325 010f 03       		.uleb128 0x3
 1326 0110 0E       		.uleb128 0xe
 1327 0111 3A       		.uleb128 0x3a
 1328 0112 0B       		.uleb128 0xb
 1329 0113 3B       		.uleb128 0x3b
 1330 0114 05       		.uleb128 0x5
 1331 0115 49       		.uleb128 0x49
 1332 0116 13       		.uleb128 0x13
 1333 0117 3F       		.uleb128 0x3f
 1334 0118 19       		.uleb128 0x19
 1335 0119 3C       		.uleb128 0x3c
 1336 011a 19       		.uleb128 0x19
 1337 011b 00       		.byte	0
 1338 011c 00       		.byte	0
 1339 011d 15       		.uleb128 0x15
 1340 011e 35       		.uleb128 0x35
ARM GAS  D:\Windows\AppData\Local\Temp\cc9NldBr.s 			page 28


 1341 011f 00       		.byte	0
 1342 0120 49       		.uleb128 0x49
 1343 0121 13       		.uleb128 0x13
 1344 0122 00       		.byte	0
 1345 0123 00       		.byte	0
 1346 0124 16       		.uleb128 0x16
 1347 0125 34       		.uleb128 0x34
 1348 0126 00       		.byte	0
 1349 0127 03       		.uleb128 0x3
 1350 0128 0E       		.uleb128 0xe
 1351 0129 3A       		.uleb128 0x3a
 1352 012a 0B       		.uleb128 0xb
 1353 012b 3B       		.uleb128 0x3b
 1354 012c 0B       		.uleb128 0xb
 1355 012d 49       		.uleb128 0x49
 1356 012e 13       		.uleb128 0x13
 1357 012f 3F       		.uleb128 0x3f
 1358 0130 19       		.uleb128 0x19
 1359 0131 02       		.uleb128 0x2
 1360 0132 18       		.uleb128 0x18
 1361 0133 00       		.byte	0
 1362 0134 00       		.byte	0
 1363 0135 17       		.uleb128 0x17
 1364 0136 26       		.uleb128 0x26
 1365 0137 00       		.byte	0
 1366 0138 49       		.uleb128 0x49
 1367 0139 13       		.uleb128 0x13
 1368 013a 00       		.byte	0
 1369 013b 00       		.byte	0
 1370 013c 18       		.uleb128 0x18
 1371 013d 21       		.uleb128 0x21
 1372 013e 00       		.byte	0
 1373 013f 49       		.uleb128 0x49
 1374 0140 13       		.uleb128 0x13
 1375 0141 2F       		.uleb128 0x2f
 1376 0142 05       		.uleb128 0x5
 1377 0143 00       		.byte	0
 1378 0144 00       		.byte	0
 1379 0145 00       		.byte	0
 1380              		.section	.debug_aranges,"",%progbits
 1381 0000 54000000 		.4byte	0x54
 1382 0004 0200     		.2byte	0x2
 1383 0006 00000000 		.4byte	.Ldebug_info0
 1384 000a 04       		.byte	0x4
 1385 000b 00       		.byte	0
 1386 000c 0000     		.2byte	0
 1387 000e 0000     		.2byte	0
 1388 0010 00000000 		.4byte	.LFB63
 1389 0014 16000000 		.4byte	.LFE63-.LFB63
 1390 0018 00000000 		.4byte	.LFB64
 1391 001c 0A000000 		.4byte	.LFE64-.LFB64
 1392 0020 00000000 		.4byte	.LFB65
 1393 0024 EC000000 		.4byte	.LFE65-.LFB65
 1394 0028 00000000 		.4byte	.LFB66
 1395 002c 80000000 		.4byte	.LFE66-.LFB66
 1396 0030 00000000 		.4byte	.LFB67
 1397 0034 48000000 		.4byte	.LFE67-.LFB67
ARM GAS  D:\Windows\AppData\Local\Temp\cc9NldBr.s 			page 29


 1398 0038 00000000 		.4byte	.LFB68
 1399 003c 50000000 		.4byte	.LFE68-.LFB68
 1400 0040 00000000 		.4byte	.LFB69
 1401 0044 28000000 		.4byte	.LFE69-.LFB69
 1402 0048 00000000 		.4byte	.LFB70
 1403 004c 70000000 		.4byte	.LFE70-.LFB70
 1404 0050 00000000 		.4byte	0
 1405 0054 00000000 		.4byte	0
 1406              		.section	.debug_ranges,"",%progbits
 1407              	.Ldebug_ranges0:
 1408 0000 00000000 		.4byte	.LFB63
 1409 0004 16000000 		.4byte	.LFE63
 1410 0008 00000000 		.4byte	.LFB64
 1411 000c 0A000000 		.4byte	.LFE64
 1412 0010 00000000 		.4byte	.LFB65
 1413 0014 EC000000 		.4byte	.LFE65
 1414 0018 00000000 		.4byte	.LFB66
 1415 001c 80000000 		.4byte	.LFE66
 1416 0020 00000000 		.4byte	.LFB67
 1417 0024 48000000 		.4byte	.LFE67
 1418 0028 00000000 		.4byte	.LFB68
 1419 002c 50000000 		.4byte	.LFE68
 1420 0030 00000000 		.4byte	.LFB69
 1421 0034 28000000 		.4byte	.LFE69
 1422 0038 00000000 		.4byte	.LFB70
 1423 003c 70000000 		.4byte	.LFE70
 1424 0040 00000000 		.4byte	0
 1425 0044 00000000 		.4byte	0
 1426              		.section	.debug_line,"",%progbits
 1427              	.Ldebug_line0:
 1428 0000 43020000 		.section	.debug_str,"MS",%progbits,1
 1428      02007201 
 1428      00000201 
 1428      FB0E0D00 
 1428      01010101 
 1429              	.LASF42:
 1430 0000 7365745F 		.ascii	"set_time_file\000"
 1430      74696D65 
 1430      5F66696C 
 1430      6500
 1431              	.LASF49:
 1432 000e 443A5C44 		.ascii	"D:\\Downloads\\FRUCD\\Node-Capybara\\Node-Capybara\\"
 1432      6F776E6C 
 1432      6F616473 
 1432      5C465255 
 1432      43445C4E 
 1433 003d 4E6F6465 		.ascii	"Node-Capybara.cydsn\000"
 1433      2D436170 
 1433      79626172 
 1433      612E6379 
 1433      64736E00 
 1434              	.LASF3:
 1435 0051 5F5F7569 		.ascii	"__uint8_t\000"
 1435      6E74385F 
 1435      7400
 1436              	.LASF40:
 1437 005b 7066696C 		.ascii	"pfile\000"
ARM GAS  D:\Windows\AppData\Local\Temp\cc9NldBr.s 			page 30


 1437      6500
 1438              	.LASF6:
 1439 0061 5F5F696E 		.ascii	"__int32_t\000"
 1439      7433325F 
 1439      7400
 1440              	.LASF16:
 1441 006b 46535F57 		.ascii	"FS_WRITEMODE_SAFE\000"
 1441      52495445 
 1441      4D4F4445 
 1441      5F534146 
 1441      4500
 1442              	.LASF43:
 1443 007d 666F726D 		.ascii	"format_file\000"
 1443      61745F66 
 1443      696C6500 
 1444              	.LASF47:
 1445 0089 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 1445      4320342E 
 1445      392E3320 
 1445      32303135 
 1445      30333033 
 1446 00bc 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 1446      20726576 
 1446      6973696F 
 1446      6E203232 
 1446      31323230 
 1447 00ef 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 1447      66756E63 
 1447      74696F6E 
 1447      2D736563 
 1447      74696F6E 
 1448              	.LASF12:
 1449 0117 756E7369 		.ascii	"unsigned int\000"
 1449      676E6564 
 1449      20696E74 
 1449      00
 1450              	.LASF45:
 1451 0124 73645F68 		.ascii	"sd_head\000"
 1451      65616400 
 1452              	.LASF30:
 1453 012c 73645F69 		.ascii	"sd_isr_custom\000"
 1453      73725F63 
 1453      7573746F 
 1453      6D00
 1454              	.LASF37:
 1455 013a 73645F73 		.ascii	"sd_stop\000"
 1455      746F7000 
 1456              	.LASF25:
 1457 0142 6D696C6C 		.ascii	"millicounter\000"
 1457      69636F75 
 1457      6E746572 
 1457      00
 1458              	.LASF23:
 1459 014f 666C6F61 		.ascii	"float\000"
 1459      7400
 1460              	.LASF27:
 1461 0155 64617461 		.ascii	"data\000"
ARM GAS  D:\Windows\AppData\Local\Temp\cc9NldBr.s 			page 31


 1461      00
 1462              	.LASF17:
 1463 015a 46535F57 		.ascii	"FS_WRITEMODE_MEDIUM\000"
 1463      52495445 
 1463      4D4F4445 
 1463      5F4D4544 
 1463      49554D00 
 1464              	.LASF1:
 1465 016e 756E7369 		.ascii	"unsigned char\000"
 1465      676E6564 
 1465      20636861 
 1465      7200
 1466              	.LASF32:
 1467 017c 73645F77 		.ascii	"sd_write\000"
 1467      72697465 
 1467      00
 1468              	.LASF36:
 1469 0185 73645F72 		.ascii	"sd_read\000"
 1469      65616400 
 1470              	.LASF18:
 1471 018d 46535F57 		.ascii	"FS_WRITEMODE_FAST\000"
 1471      52495445 
 1471      4D4F4445 
 1471      5F464153 
 1471      5400
 1472              	.LASF9:
 1473 019f 6C6F6E67 		.ascii	"long unsigned int\000"
 1473      20756E73 
 1473      69676E65 
 1473      6420696E 
 1473      7400
 1474              	.LASF5:
 1475 01b1 73686F72 		.ascii	"short unsigned int\000"
 1475      7420756E 
 1475      7369676E 
 1475      65642069 
 1475      6E7400
 1476              	.LASF41:
 1477 01c4 73645F6F 		.ascii	"sd_ok\000"
 1477      6B00
 1478              	.LASF15:
 1479 01ca 46535F46 		.ascii	"FS_FILE\000"
 1479      494C4500 
 1480              	.LASF33:
 1481 01d2 66696C65 		.ascii	"file_str\000"
 1481      5F737472 
 1481      00
 1482              	.LASF4:
 1483 01db 5F5F7569 		.ascii	"__uint16_t\000"
 1483      6E743136 
 1483      5F7400
 1484              	.LASF24:
 1485 01e6 646F7562 		.ascii	"double\000"
 1485      6C6500
 1486              	.LASF38:
 1487 01ed 73645F77 		.ascii	"sd_writetest\000"
 1487      72697465 
ARM GAS  D:\Windows\AppData\Local\Temp\cc9NldBr.s 			page 32


 1487      74657374 
 1487      00
 1488              	.LASF8:
 1489 01fa 5F5F7569 		.ascii	"__uint32_t\000"
 1489      6E743332 
 1489      5F7400
 1490              	.LASF50:
 1491 0205 73645F62 		.ascii	"sd_buffer\000"
 1491      75666665 
 1491      7200
 1492              	.LASF35:
 1493 020f 61746F6D 		.ascii	"atomic_state\000"
 1493      69635F73 
 1493      74617465 
 1493      00
 1494              	.LASF48:
 1495 021c 73645F6D 		.ascii	"sd_manager.c\000"
 1495      616E6167 
 1495      65722E63 
 1495      00
 1496              	.LASF28:
 1497 0229 44617461 		.ascii	"DataPacket\000"
 1497      5061636B 
 1497      657400
 1498              	.LASF14:
 1499 0234 63686172 		.ascii	"char\000"
 1499      00
 1500              	.LASF19:
 1501 0239 75696E74 		.ascii	"uint8_t\000"
 1501      385F7400 
 1502              	.LASF44:
 1503 0241 73645F71 		.ascii	"sd_queue\000"
 1503      75657565 
 1503      00
 1504              	.LASF46:
 1505 024a 73645F74 		.ascii	"sd_tail\000"
 1505      61696C00 
 1506              	.LASF39:
 1507 0252 49544D5F 		.ascii	"ITM_RxBuffer\000"
 1507      52784275 
 1507      66666572 
 1507      00
 1508              	.LASF21:
 1509 025f 696E7433 		.ascii	"int32_t\000"
 1509      325F7400 
 1510              	.LASF13:
 1511 0267 73697A65 		.ascii	"sizetype\000"
 1511      74797065 
 1511      00
 1512              	.LASF10:
 1513 0270 6C6F6E67 		.ascii	"long long int\000"
 1513      206C6F6E 
 1513      6720696E 
 1513      7400
 1514              	.LASF29:
 1515 027e 706F7765 		.ascii	"power_isr_custom\000"
 1515      725F6973 
ARM GAS  D:\Windows\AppData\Local\Temp\cc9NldBr.s 			page 33


 1515      725F6375 
 1515      73746F6D 
 1515      00
 1516              	.LASF34:
 1517 028f 62756666 		.ascii	"buffer\000"
 1517      657200
 1518              	.LASF20:
 1519 0296 75696E74 		.ascii	"uint16_t\000"
 1519      31365F74 
 1519      00
 1520              	.LASF2:
 1521 029f 73686F72 		.ascii	"short int\000"
 1521      7420696E 
 1521      7400
 1522              	.LASF22:
 1523 02a9 75696E74 		.ascii	"uint32_t\000"
 1523      33325F74 
 1523      00
 1524              	.LASF7:
 1525 02b2 6C6F6E67 		.ascii	"long int\000"
 1525      20696E74 
 1525      00
 1526              	.LASF31:
 1527 02bb 73645F69 		.ascii	"sd_init\000"
 1527      6E697400 
 1528              	.LASF0:
 1529 02c3 7369676E 		.ascii	"signed char\000"
 1529      65642063 
 1529      68617200 
 1530              	.LASF26:
 1531 02cf 6C656E67 		.ascii	"length\000"
 1531      746800
 1532              	.LASF11:
 1533 02d6 6C6F6E67 		.ascii	"long long unsigned int\000"
 1533      206C6F6E 
 1533      6720756E 
 1533      7369676E 
 1533      65642069 
 1534              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
