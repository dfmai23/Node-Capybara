ARM GAS  D:\Windows\AppData\Local\Temp\ccaG2iBi.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"emFile_1_MMC_HW_SPI.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.bss
  19              	emFile_1_isInited0:
  20 0000 00       		.space	1
  21              		.section	.text.emFile_1_Init,"ax",%progbits
  22              		.align	2
  23              		.thumb
  24              		.thumb_func
  25              		.type	emFile_1_Init, %function
  26              	emFile_1_Init:
  27              	.LFB63:
  28              		.file 1 "Generated_Source\\PSoC5\\emFile_1_MMC_HW_SPI.c"
   1:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** * File Name: emFile_1_MMC_HW_SPI.c
   3:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** * Version 1.20
   4:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** *
   5:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** * Description:
   6:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** *  Contains a set of File System APIs that implements SPI mode driver operation.
   7:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** *
   8:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** * Note:
   9:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** *
  10:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** ********************************************************************************
  11:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** * Copyright 2011-2012, Cypress Semiconductor Corporation.  All rights reserved.
  12:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** * You may use this file only in accordance with the license, terms, conditions,
  13:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** * disclaimers, and limitations in the end user license agreement accompanying
  14:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** * the software package with which this file was provided.
  15:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** *******************************************************************************/
  16:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
  17:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** #include "FS.h"
  18:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** #include "emFile_1.h"
  19:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** #include "MMC_X_HW.h"
  20:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** #include "project.h"
  21:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
  22:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
  23:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** /*********************************************************************
  24:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** *             Macros
  25:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** *********************************************************************/
  26:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** /* in mV, example means 3.3V */
  27:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** #define emFile_1_MMC_DEFAULT_SUPPLY_VOLTAGE    (3300u)
  28:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
  29:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** /* Max. startup frequency (KHz) */
ARM GAS  D:\Windows\AppData\Local\Temp\ccaG2iBi.s 			page 2


  30:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** #define emFile_1_STARTUP_FREQ                   (400u)
  31:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
  32:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
  33:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** /*********************************************************************
  34:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** *       Static data
  35:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** *********************************************************************/
  36:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
  37:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** static char emFile_1_isInited0;
  38:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
  39:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** #if (emFile_1_NUMBER_SD_CARDS >= 2u)
  40:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
  41:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****     static char emFile_1_isInited1;
  42:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
  43:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** #endif /* (emFile_1_NUMBER_SD_CARDS >= 2u) */
  44:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
  45:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** #if (emFile_1_NUMBER_SD_CARDS >= 3u)
  46:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
  47:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****     static char emFile_1_isInited2;
  48:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
  49:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** #endif /* (emFile_1_NUMBER_SD_CARDS >= 3u) */
  50:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
  51:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** #if (emFile_1_NUMBER_SD_CARDS == 4u)
  52:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
  53:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****     static char emFile_1_isInited3;
  54:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
  55:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** #endif /* (emFile_1_NUMBER_SD_CARDS == 4u) */
  56:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
  57:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
  58:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** /*******************************************************************************
  59:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** * Function Name: emFile_1_Init
  60:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** ********************************************************************************
  61:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** *
  62:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** * Summary:
  63:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** *  Initialize SPI Masters.
  64:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** *
  65:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** * Parameters:
  66:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** *  Unit - Unit (SPIM) number.
  67:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** *
  68:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** * Return:
  69:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** *  None
  70:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** *
  71:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** * Reentrant:
  72:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** *  No
  73:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** *
  74:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** *******************************************************************************/
  75:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** static void emFile_1_Init(U8 Unit) CYREENTRANT
  76:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** {
  29              		.loc 1 76 0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 8
  32              		@ frame_needed = 1, uses_anonymous_args = 0
  33 0000 80B5     		push	{r7, lr}
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 7, -8
  36              		.cfi_offset 14, -4
  37 0002 82B0     		sub	sp, sp, #8
  38              		.cfi_def_cfa_offset 16
ARM GAS  D:\Windows\AppData\Local\Temp\ccaG2iBi.s 			page 3


  39 0004 00AF     		add	r7, sp, #0
  40              		.cfi_def_cfa_register 7
  41 0006 0346     		mov	r3, r0
  42 0008 FB71     		strb	r3, [r7, #7]
  77:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****     switch(Unit)
  43              		.loc 1 77 0
  44 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
  45 000c 002B     		cmp	r3, #0
  46 000e 12D1     		bne	.L7
  78:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****     {
  79:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****     case 0u:
  80:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
  81:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****         if (emFile_1_isInited0 == 0u)
  47              		.loc 1 81 0
  48 0010 134B     		ldr	r3, .L8
  49 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  50 0014 002B     		cmp	r3, #0
  51 0016 0DD1     		bne	.L4
  82:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****         {
  83:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****             /* Indicate that SPI 0 was initialized */
  84:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****             emFile_1_isInited0 = 1u;
  52              		.loc 1 84 0
  53 0018 114B     		ldr	r3, .L8
  54 001a 0122     		movs	r2, #1
  55 001c 1A70     		strb	r2, [r3]
  85:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
  86:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****             /* Initialize SPI */
  87:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
  88:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****             /* Stop the clock to set a required divider */
  89:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****             emFile_1_Clock_1_Stop();
  56              		.loc 1 89 0
  57 001e FFF7FEFF 		bl	emFile_1_Clock_1_Stop
  90:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
  91:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****             /* Set the inital clock frequency to 400 KHz */
  92:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****             emFile_1_Clock_1_SetDividerValue(BCLK__BUS_CLK__KHZ/emFile_1_STARTUP_FREQ);
  58              		.loc 1 92 0
  59 0022 3B20     		movs	r0, #59
  60 0024 0121     		movs	r1, #1
  61 0026 FFF7FEFF 		bl	emFile_1_Clock_1_SetDividerRegister
  93:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
  94:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****             /* Start the clock */
  95:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****             emFile_1_Clock_1_Start();
  62              		.loc 1 95 0
  63 002a FFF7FEFF 		bl	emFile_1_Clock_1_Start
  96:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
  97:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****             /* Start SPI 0 */
  98:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****             emFile_1_SPI0_Start();
  64              		.loc 1 98 0
  65 002e FFF7FEFF 		bl	emFile_1_SPI0_Start
  99:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****         }
 100:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 101:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****         break;
  66              		.loc 1 101 0
  67 0032 12E0     		b	.L1
  68              	.L4:
  69 0034 11E0     		b	.L1
  70              	.L7:
ARM GAS  D:\Windows\AppData\Local\Temp\ccaG2iBi.s 			page 4


 102:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 103:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****         #if (emFile_1_NUMBER_SD_CARDS >= 2u)
 104:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 105:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****             case 1u:
 106:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 107:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****                 if (emFile_1_isInited1 == 0u)
 108:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****                 {
 109:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****                     /* Indicate that SPI 1 was initialized */
 110:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****                     emFile_1_isInited1 = 1u;
 111:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 112:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****                     /* Stop the clock to set a required divider */
 113:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****                     emFile_1_Clock_2_Stop();
 114:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 115:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****                     /* Set the inital clock frequency to 400 KHz */
 116:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****                     emFile_1_Clock_2_SetDividerValue(BCLK__BUS_CLK__KHZ/emFile_1_STARTUP_FREQ);
 117:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 118:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****                     /* Start the clock */
 119:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****                     emFile_1_Clock_2_Start();
 120:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 121:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****                     /* Start SPI 1 */
 122:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****                     emFile_1_SPI1_Start();
 123:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****                 }
 124:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 125:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****                 break;
 126:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 127:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****         #endif /* (emFile_1_NUMBER_SD_CARDS >= 2u) */
 128:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 129:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****         #if (emFile_1_NUMBER_SD_CARDS >= 3u)
 130:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 131:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****             case 2u:
 132:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 133:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****                 if (emFile_1_isInited2 == 0u)
 134:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****                 {
 135:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****                     /* Indicate that SPI 2 was initialized */
 136:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****                     emFile_1_isInited2 = 1u;
 137:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 138:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****                     /* Stop the clock to set a required divider */
 139:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****                     emFile_1_Clock_3_Stop();
 140:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 141:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****                     /* Set the inital clock frequency to 400 KHz */
 142:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****                     emFile_1_Clock_3_SetDividerValue(BCLK__BUS_CLK__KHZ/emFile_1_STARTUP_FREQ);
 143:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 144:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****                     /* Start the clock */
 145:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****                     emFile_1_Clock_3_Start();
 146:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 147:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****                     /* Start SPI 2 */
 148:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****                     emFile_1_SPI2_Start();
 149:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****                 }
 150:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 151:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****                 break;
 152:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 153:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****         #endif /* (emFile_1_NUMBER_SD_CARDS >= 3u) */
 154:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 155:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****         #if (emFile_1_NUMBER_SD_CARDS == 4u)
 156:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 157:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****             case 3u:
 158:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
ARM GAS  D:\Windows\AppData\Local\Temp\ccaG2iBi.s 			page 5


 159:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****                 if (emFile_1_isInited3 == 0u)
 160:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****                 {
 161:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****                     /* Indicate that SPI 3 was initialized */
 162:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****                     emFile_1_isInited3 = 1u;
 163:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 164:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****                     /* Stop the clock to set a required divider */
 165:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****                     emFile_1_Clock_4_Stop();
 166:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 167:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****                     /* Set the inital clock frequency to 400 KHz */
 168:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****                     emFile_1_Clock_4_SetDividerValue(BCLK__BUS_CLK__KHZ/emFile_1_STARTUP_FREQ);
 169:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 170:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****                     /* Start the clock */
 171:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****                     emFile_1_Clock_4_Start();
 172:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 173:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****                     /* Start SPI 3 */
 174:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****                     emFile_1_SPI3_Start();
 175:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****                 }
 176:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 177:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****                 break;
 178:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 179:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****         #endif /* (emFile_1_NUMBER_SD_CARDS == 4u) */
 180:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 181:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****     default:
 182:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 183:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****         if (emFile_1_isInited0 == 0u)
  71              		.loc 1 183 0
  72 0036 0A4B     		ldr	r3, .L8
  73 0038 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  74 003a 002B     		cmp	r3, #0
  75 003c 0CD1     		bne	.L6
 184:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****         {
 185:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****             /* Indicate that SPI 0 was initialized */
 186:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****             emFile_1_isInited0 = 1u;
  76              		.loc 1 186 0
  77 003e 084B     		ldr	r3, .L8
  78 0040 0122     		movs	r2, #1
  79 0042 1A70     		strb	r2, [r3]
 187:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 188:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****             /* Stop the clock to set a required divider */
 189:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****             emFile_1_Clock_1_Stop();
  80              		.loc 1 189 0
  81 0044 FFF7FEFF 		bl	emFile_1_Clock_1_Stop
 190:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 191:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****             /* Set the inital clock frequency to 400 KHz */
 192:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****             emFile_1_Clock_1_SetDividerValue(BCLK__BUS_CLK__KHZ/emFile_1_STARTUP_FREQ);
  82              		.loc 1 192 0
  83 0048 3B20     		movs	r0, #59
  84 004a 0121     		movs	r1, #1
  85 004c FFF7FEFF 		bl	emFile_1_Clock_1_SetDividerRegister
 193:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 194:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****             /* Start the clock */
 195:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****             emFile_1_Clock_1_Start();
  86              		.loc 1 195 0
  87 0050 FFF7FEFF 		bl	emFile_1_Clock_1_Start
 196:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 197:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****             /* Start SPI 0 */
 198:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****             emFile_1_SPI0_Start();
ARM GAS  D:\Windows\AppData\Local\Temp\ccaG2iBi.s 			page 6


  88              		.loc 1 198 0
  89 0054 FFF7FEFF 		bl	emFile_1_SPI0_Start
  90              	.L6:
 199:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****         }
 200:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****         
 201:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****         break;
  91              		.loc 1 201 0
  92 0058 00BF     		nop
  93              	.L1:
 202:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****       }
 203:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** }
  94              		.loc 1 203 0
  95 005a 0837     		adds	r7, r7, #8
  96              		.cfi_def_cfa_offset 8
  97 005c BD46     		mov	sp, r7
  98              		.cfi_def_cfa_register 13
  99              		@ sp needed
 100 005e 80BD     		pop	{r7, pc}
 101              	.L9:
 102              		.align	2
 103              	.L8:
 104 0060 00000000 		.word	emFile_1_isInited0
 105              		.cfi_endproc
 106              	.LFE63:
 107              		.size	emFile_1_Init, .-emFile_1_Init
 108              		.section	.text.emFile_1_ReadWriteSPI,"ax",%progbits
 109              		.align	2
 110              		.thumb
 111              		.thumb_func
 112              		.type	emFile_1_ReadWriteSPI, %function
 113              	emFile_1_ReadWriteSPI:
 114              	.LFB64:
 204:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 205:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 206:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** /*******************************************************************************
 207:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** * Function Name: emFile_1_ReadWriteSPI
 208:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** ********************************************************************************
 209:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** *
 210:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** * Summary:
 211:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** *  Reads and Writes data via SPI.
 212:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** *
 213:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** * Parameters:
 214:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** *  Unit - Unit number;
 215:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** *  Data - data to be written.
 216:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** *
 217:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** * Return:
 218:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** *  Data received from SD card.
 219:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** *
 220:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** * Reentrant:
 221:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** *  No
 222:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** *
 223:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** *******************************************************************************/
 224:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** static U8 emFile_1_ReadWriteSPI(U8 Unit, U8 Data) CYREENTRANT
 225:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** {
 115              		.loc 1 225 0
 116              		.cfi_startproc
 117              		@ args = 0, pretend = 0, frame = 16
ARM GAS  D:\Windows\AppData\Local\Temp\ccaG2iBi.s 			page 7


 118              		@ frame_needed = 1, uses_anonymous_args = 0
 119 0000 80B5     		push	{r7, lr}
 120              		.cfi_def_cfa_offset 8
 121              		.cfi_offset 7, -8
 122              		.cfi_offset 14, -4
 123 0002 84B0     		sub	sp, sp, #16
 124              		.cfi_def_cfa_offset 24
 125 0004 00AF     		add	r7, sp, #0
 126              		.cfi_def_cfa_register 7
 127 0006 0346     		mov	r3, r0
 128 0008 0A46     		mov	r2, r1
 129 000a FB71     		strb	r3, [r7, #7]
 130 000c 1346     		mov	r3, r2
 131 000e BB71     		strb	r3, [r7, #6]
 226:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****     U8 spiData;
 227:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 228:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****     switch(Unit)
 132              		.loc 1 228 0
 133 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 134 0012 002B     		cmp	r3, #0
 135 0014 11D1     		bne	.L17
 229:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****     {
 230:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****     case 0u:
 231:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 232:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****         /* Send Data */
 233:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****         emFile_1_SPI0_WriteTxData(Data);
 136              		.loc 1 233 0
 137 0016 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 138 0018 1846     		mov	r0, r3
 139 001a FFF7FEFF 		bl	emFile_1_SPI0_WriteTxData
 234:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 235:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****         /* Wait until all bits are shifted */
 236:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****         while (0u == (emFile_1_SPI0_STS_SPI_DONE & emFile_1_SPI0_ReadTxStatus()));
 140              		.loc 1 236 0
 141 001e 00BF     		nop
 142              	.L13:
 143              		.loc 1 236 0 is_stmt 0 discriminator 1
 144 0020 FFF7FEFF 		bl	emFile_1_SPI0_ReadTxStatus
 145 0024 0346     		mov	r3, r0
 146 0026 03F00103 		and	r3, r3, #1
 147 002a DBB2     		uxtb	r3, r3
 148 002c 002B     		cmp	r3, #0
 149 002e F7D0     		beq	.L13
 237:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 238:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****         /* Read data */
 239:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****         spiData = emFile_1_SPI0_ReadRxData();
 150              		.loc 1 239 0 is_stmt 1
 151 0030 FFF7FEFF 		bl	emFile_1_SPI0_ReadRxData
 152 0034 0346     		mov	r3, r0
 153 0036 FB73     		strb	r3, [r7, #15]
 240:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 241:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****         break;
 154              		.loc 1 241 0
 155 0038 11E0     		b	.L14
 156              	.L17:
 242:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 243:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****     #if (emFile_1_NUMBER_SD_CARDS >= 2u)
ARM GAS  D:\Windows\AppData\Local\Temp\ccaG2iBi.s 			page 8


 244:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 245:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****         case 1u:
 246:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 247:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****             /* Send Data */
 248:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****             emFile_1_SPI1_WriteTxData(Data);
 249:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 250:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****             /* Wait until all bits are shifted */
 251:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****             while (0u == (emFile_1_SPI1_STS_SPI_DONE & emFile_1_SPI1_ReadTxStatus()));
 252:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 253:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****             /* Read data */
 254:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****             spiData = emFile_1_SPI1_ReadRxData();
 255:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 256:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****             break;
 257:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 258:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****     #endif /* (emFile_1_NUMBER_SD_CARDS >= 2u) */
 259:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 260:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****     #if (emFile_1_NUMBER_SD_CARDS >= 3u)
 261:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 262:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****         case 2u:
 263:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 264:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****             /* Send Data */
 265:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****             emFile_1_SPI2_WriteTxData(Data);
 266:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 267:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****             /* Wait until all bits are shifted */
 268:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****             while (0u == (emFile_1_SPI2_STS_SPI_DONE & emFile_1_SPI2_ReadTxStatus()));
 269:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 270:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****             /* Read data */
 271:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****             spiData = emFile_1_SPI2_ReadRxData();
 272:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 273:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****             break;
 274:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 275:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****     #endif /* (emFile_1_NUMBER_SD_CARDS >= 2u) */
 276:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 277:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****     #if (emFile_1_NUMBER_SD_CARDS >= 4u)
 278:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 279:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****         case 3u:
 280:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 281:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****             /* Send Data */
 282:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****             emFile_1_SPI3_WriteTxData(Data);
 283:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 284:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****             /* Wait until all bits are shifted */
 285:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****             while (0u == (emFile_1_SPI3_STS_SPI_DONE & emFile_1_SPI3_ReadTxStatus()));
 286:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 287:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****             /* Read data */
 288:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****             spiData = emFile_1_SPI3_ReadRxData();
 289:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 290:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****             break;
 291:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 292:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****     #endif /* (emFile_1_NUMBER_SD_CARDS >= 4u) */
 293:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 294:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****     default:
 295:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 296:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****         /* Send Data */
 297:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****         emFile_1_SPI0_WriteTxData(Data);
 157              		.loc 1 297 0
 158 003a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 159 003c 1846     		mov	r0, r3
ARM GAS  D:\Windows\AppData\Local\Temp\ccaG2iBi.s 			page 9


 160 003e FFF7FEFF 		bl	emFile_1_SPI0_WriteTxData
 298:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 299:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****         /* Wait until all bits are shifted */
 300:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****         while (0u == (emFile_1_SPI0_STS_SPI_DONE & emFile_1_SPI0_ReadTxStatus()));
 161              		.loc 1 300 0
 162 0042 00BF     		nop
 163              	.L15:
 164              		.loc 1 300 0 is_stmt 0 discriminator 1
 165 0044 FFF7FEFF 		bl	emFile_1_SPI0_ReadTxStatus
 166 0048 0346     		mov	r3, r0
 167 004a 03F00103 		and	r3, r3, #1
 168 004e DBB2     		uxtb	r3, r3
 169 0050 002B     		cmp	r3, #0
 170 0052 F7D0     		beq	.L15
 301:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 302:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****         /* Read data */
 303:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****         spiData = emFile_1_SPI0_ReadRxData();
 171              		.loc 1 303 0 is_stmt 1
 172 0054 FFF7FEFF 		bl	emFile_1_SPI0_ReadRxData
 173 0058 0346     		mov	r3, r0
 174 005a FB73     		strb	r3, [r7, #15]
 304:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****         
 305:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****         break;
 175              		.loc 1 305 0
 176 005c 00BF     		nop
 177              	.L14:
 306:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****     }
 307:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 308:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****     return(spiData);
 178              		.loc 1 308 0
 179 005e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 309:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** }
 180              		.loc 1 309 0
 181 0060 1846     		mov	r0, r3
 182 0062 1037     		adds	r7, r7, #16
 183              		.cfi_def_cfa_offset 8
 184 0064 BD46     		mov	sp, r7
 185              		.cfi_def_cfa_register 13
 186              		@ sp needed
 187 0066 80BD     		pop	{r7, pc}
 188              		.cfi_endproc
 189              	.LFE64:
 190              		.size	emFile_1_ReadWriteSPI, .-emFile_1_ReadWriteSPI
 191              		.section	.text.FS_MMC_HW_X_EnableCS,"ax",%progbits
 192              		.align	2
 193              		.global	FS_MMC_HW_X_EnableCS
 194              		.thumb
 195              		.thumb_func
 196              		.type	FS_MMC_HW_X_EnableCS, %function
 197              	FS_MMC_HW_X_EnableCS:
 198              	.LFB65:
 310:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 311:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** /*******************************************************************************
 312:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** * Function Name: FS_MMC_HW_X_EnableCS
 313:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** ********************************************************************************
 314:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** *
 315:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** * Summary:
ARM GAS  D:\Windows\AppData\Local\Temp\ccaG2iBi.s 			page 10


 316:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** *  FS low level function. Sets the card slot active using the
 317:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** *  chip select (CS) line.
 318:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** *
 319:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** * Parameters:
 320:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** *  Unit      - Device Index.
 321:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** *
 322:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** * Return:
 323:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** *  None
 324:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** *
 325:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** * Reentrant:
 326:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** *  No
 327:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** *
 328:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** *******************************************************************************/
 329:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** void FS_MMC_HW_X_EnableCS(U8 Unit)
 330:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** {
 199              		.loc 1 330 0
 200              		.cfi_startproc
 201              		@ args = 0, pretend = 0, frame = 8
 202              		@ frame_needed = 1, uses_anonymous_args = 0
 203 0000 80B5     		push	{r7, lr}
 204              		.cfi_def_cfa_offset 8
 205              		.cfi_offset 7, -8
 206              		.cfi_offset 14, -4
 207 0002 82B0     		sub	sp, sp, #8
 208              		.cfi_def_cfa_offset 16
 209 0004 00AF     		add	r7, sp, #0
 210              		.cfi_def_cfa_register 7
 211 0006 0346     		mov	r3, r0
 212 0008 FB71     		strb	r3, [r7, #7]
 331:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****     switch(Unit)
 213              		.loc 1 331 0
 214 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 215 000c 002B     		cmp	r3, #0
 216 000e 03D1     		bne	.L22
 332:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****     {
 333:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****         case 0u:
 334:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 335:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****             /* Set CS to 0 */
 336:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****             emFile_1_SPI0_CS_Write(0u);
 217              		.loc 1 336 0
 218 0010 0020     		movs	r0, #0
 219 0012 FFF7FEFF 		bl	emFile_1_SPI0_CS_Write
 337:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 338:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****             break;
 220              		.loc 1 338 0
 221 0016 03E0     		b	.L18
 222              	.L22:
 339:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 340:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****         #if (emFile_1_NUMBER_SD_CARDS >= 2u)
 341:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 342:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****             case 1u:
 343:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 344:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****                 /* Set CS to 0 */
 345:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****                 emFile_1_SPI1_CS_Write(0u);
 346:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 347:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****                 break;
 348:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
ARM GAS  D:\Windows\AppData\Local\Temp\ccaG2iBi.s 			page 11


 349:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****         #endif /* (emFile_1_NUMBER_SD_CARDS >= 2u) */
 350:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 351:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****         #if (emFile_1_NUMBER_SD_CARDS >= 3u)
 352:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 353:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****             case 2u:
 354:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 355:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****                 /* Set CS to 0 */
 356:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****                 emFile_1_SPI2_CS_Write(0u);
 357:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 358:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****                 break;
 359:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 360:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****         #endif /* (emFile_1_NUMBER_SD_CARDS >= 3u) */
 361:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 362:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****         #if (emFile_1_NUMBER_SD_CARDS == 4u)
 363:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 364:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****             case 3u:
 365:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 366:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****                 /* Set CS to 0 */
 367:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****                 emFile_1_SPI3_CS_Write(0u);
 368:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 369:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****                 break;
 370:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 371:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****         #endif /* (emFile_1_NUMBER_SD_CARDS == 4u) */
 372:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 373:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****         default:
 374:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 375:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****             emFile_1_SPI0_CS_Write(0u);
 223              		.loc 1 375 0
 224 0018 0020     		movs	r0, #0
 225 001a FFF7FEFF 		bl	emFile_1_SPI0_CS_Write
 376:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 377:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****             break;
 226              		.loc 1 377 0
 227 001e 00BF     		nop
 228              	.L18:
 378:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****     }
 379:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** }
 229              		.loc 1 379 0
 230 0020 0837     		adds	r7, r7, #8
 231              		.cfi_def_cfa_offset 8
 232 0022 BD46     		mov	sp, r7
 233              		.cfi_def_cfa_register 13
 234              		@ sp needed
 235 0024 80BD     		pop	{r7, pc}
 236              		.cfi_endproc
 237              	.LFE65:
 238              		.size	FS_MMC_HW_X_EnableCS, .-FS_MMC_HW_X_EnableCS
 239 0026 00BF     		.section	.text.FS_MMC_HW_X_DisableCS,"ax",%progbits
 240              		.align	2
 241              		.global	FS_MMC_HW_X_DisableCS
 242              		.thumb
 243              		.thumb_func
 244              		.type	FS_MMC_HW_X_DisableCS, %function
 245              	FS_MMC_HW_X_DisableCS:
 246              	.LFB66:
 380:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 381:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
ARM GAS  D:\Windows\AppData\Local\Temp\ccaG2iBi.s 			page 12


 382:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** /*******************************************************************************
 383:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** * Function Name: FS_MMC_HW_X_DisableCS
 384:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** ********************************************************************************
 385:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** *
 386:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** * Summary:
 387:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** *  FS low level function. Clears the card slot inactive using the
 388:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** *  chip select (CS) line.
 389:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** *
 390:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** * Parameters:
 391:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** *  Unit      - Device Index.
 392:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** *
 393:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** * Return:
 394:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** *  None
 395:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** *
 396:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** * Reentrant:
 397:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** *  No
 398:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** *
 399:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** *******************************************************************************/
 400:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** void FS_MMC_HW_X_DisableCS(U8 Unit)
 401:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** {
 247              		.loc 1 401 0
 248              		.cfi_startproc
 249              		@ args = 0, pretend = 0, frame = 8
 250              		@ frame_needed = 1, uses_anonymous_args = 0
 251 0000 80B5     		push	{r7, lr}
 252              		.cfi_def_cfa_offset 8
 253              		.cfi_offset 7, -8
 254              		.cfi_offset 14, -4
 255 0002 82B0     		sub	sp, sp, #8
 256              		.cfi_def_cfa_offset 16
 257 0004 00AF     		add	r7, sp, #0
 258              		.cfi_def_cfa_register 7
 259 0006 0346     		mov	r3, r0
 260 0008 FB71     		strb	r3, [r7, #7]
 402:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****     switch(Unit)
 261              		.loc 1 402 0
 262 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 263 000c 002B     		cmp	r3, #0
 264 000e 03D1     		bne	.L27
 403:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****     {
 404:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****     case 0u:
 405:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 406:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****         emFile_1_SPI0_CS_Write(1u);
 265              		.loc 1 406 0
 266 0010 0120     		movs	r0, #1
 267 0012 FFF7FEFF 		bl	emFile_1_SPI0_CS_Write
 407:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 408:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****         break;
 268              		.loc 1 408 0
 269 0016 03E0     		b	.L23
 270              	.L27:
 409:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 410:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****     #if (emFile_1_NUMBER_SD_CARDS >= 2u)
 411:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 412:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****         case 1u:
 413:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 414:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****             emFile_1_SPI1_CS_Write(1u);
ARM GAS  D:\Windows\AppData\Local\Temp\ccaG2iBi.s 			page 13


 415:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 416:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****             break;
 417:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 418:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****     #endif /* (emFile_1_NUMBER_SD_CARDS >= 2u) */
 419:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 420:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****     #if (emFile_1_NUMBER_SD_CARDS >= 3u)
 421:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 422:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****         case 2u:
 423:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 424:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****             emFile_1_SPI2_CS_Write(1u);
 425:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 426:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****             break;
 427:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 428:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****     #endif /* (emFile_1_NUMBER_SD_CARDS >= 3u) */
 429:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 430:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****     #if (emFile_1_NUMBER_SD_CARDS == 4u)
 431:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 432:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****         case 3u:
 433:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 434:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****             emFile_1_SPI3_CS_Write(1u);
 435:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 436:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****             break;
 437:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 438:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****     #endif /* (emFile_1_NUMBER_SD_CARDS == 4u) */
 439:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 440:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****     default:
 441:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 442:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****         emFile_1_SPI0_CS_Write(1u);
 271              		.loc 1 442 0
 272 0018 0120     		movs	r0, #1
 273 001a FFF7FEFF 		bl	emFile_1_SPI0_CS_Write
 443:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****         
 444:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****         break;
 274              		.loc 1 444 0
 275 001e 00BF     		nop
 276              	.L23:
 445:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****     }
 446:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** }
 277              		.loc 1 446 0
 278 0020 0837     		adds	r7, r7, #8
 279              		.cfi_def_cfa_offset 8
 280 0022 BD46     		mov	sp, r7
 281              		.cfi_def_cfa_register 13
 282              		@ sp needed
 283 0024 80BD     		pop	{r7, pc}
 284              		.cfi_endproc
 285              	.LFE66:
 286              		.size	FS_MMC_HW_X_DisableCS, .-FS_MMC_HW_X_DisableCS
 287 0026 00BF     		.section	.text.FS_MMC_HW_X_IsWriteProtected,"ax",%progbits
 288              		.align	2
 289              		.global	FS_MMC_HW_X_IsWriteProtected
 290              		.thumb
 291              		.thumb_func
 292              		.type	FS_MMC_HW_X_IsWriteProtected, %function
 293              	FS_MMC_HW_X_IsWriteProtected:
 294              	.LFB67:
 447:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
ARM GAS  D:\Windows\AppData\Local\Temp\ccaG2iBi.s 			page 14


 448:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 449:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** /*******************************************************************************
 450:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** * Function Name: FS_MMC_HW_X_IsWriteProtected
 451:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** ********************************************************************************
 452:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** *
 453:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** * Summary:
 454:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** *  FS low level function. Returns the state of the physical write
 455:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** *  protection of the SD cards.
 456:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** *
 457:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** * Parameters:
 458:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** *  Unit      - Device Index.
 459:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** *
 460:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** * Return:
 461:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** *    1       - the card is write protected;
 462:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** *    0       - the card is not write protected.
 463:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** *
 464:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** * Reentrant:
 465:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** *  No
 466:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** *
 467:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** *******************************************************************************/
 468:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** int FS_MMC_HW_X_IsWriteProtected(U8 Unit)
 469:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** {
 295              		.loc 1 469 0
 296              		.cfi_startproc
 297              		@ args = 0, pretend = 0, frame = 16
 298              		@ frame_needed = 1, uses_anonymous_args = 0
 299              		@ link register save eliminated.
 300 0000 80B4     		push	{r7}
 301              		.cfi_def_cfa_offset 4
 302              		.cfi_offset 7, -4
 303 0002 85B0     		sub	sp, sp, #20
 304              		.cfi_def_cfa_offset 24
 305 0004 00AF     		add	r7, sp, #0
 306              		.cfi_def_cfa_register 7
 307 0006 0346     		mov	r3, r0
 308 0008 FB71     		strb	r3, [r7, #7]
 470:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****    int wpState;
 471:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 472:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****     switch(Unit)
 309              		.loc 1 472 0
 310 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 311 000c 002B     		cmp	r3, #0
 312 000e 02D1     		bne	.L33
 473:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****     {
 474:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****     case 0u:
 475:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 476:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****         #if (emFile_1_WP0_EN)
 477:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 478:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****             /* Based on physical switch state */
 479:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****               wpState = (int)emFile_1_SPI0_WP_Read();
 480:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 481:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****         #else
 482:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 483:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****             wpState = 0;
 313              		.loc 1 483 0
 314 0010 0023     		movs	r3, #0
 315 0012 FB60     		str	r3, [r7, #12]
ARM GAS  D:\Windows\AppData\Local\Temp\ccaG2iBi.s 			page 15


 484:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 485:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****         #endif /* (emFile_1_WP0_EN) */
 486:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 487:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****         break;
 316              		.loc 1 487 0
 317 0014 02E0     		b	.L31
 318              	.L33:
 488:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 489:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****     #if (emFile_1_NUMBER_SD_CARDS >= 2u)
 490:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 491:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****         case 1u:
 492:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 493:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****             #if (emFile_1_WP1_EN)
 494:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 495:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****                    /* Based on physical switch state */
 496:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****                 wpState = (int)emFile_1_SPI1_WP_Read();
 497:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 498:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****             #else
 499:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 500:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****                 wpState = 0;
 501:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 502:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****             #endif /* (emFile_1_WP1_EN) */
 503:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 504:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****             break;
 505:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 506:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****     #endif /* (emFile_1_NUMBER_SD_CARDS >= 2u) */
 507:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 508:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****     #if (emFile_1_NUMBER_SD_CARDS >= 3u)
 509:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 510:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****         case 2u:
 511:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 512:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****             #if (emFile_1_WP2_EN)
 513:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 514:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****                   /* Based on physical switch state */
 515:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****                 wpState = (int)emFile_1_SPI2_WP_Read();
 516:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 517:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****             #else
 518:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 519:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****                 wpState = 0;
 520:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 521:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****             #endif /* (emFile_1_WP2_EN) */
 522:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 523:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****             break;
 524:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 525:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****     #endif /* (emFile_1_NUMBER_SD_CARDS >= 3u) */
 526:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 527:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****     #if (emFile_1_NUMBER_SD_CARDS == 4u)
 528:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 529:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****         case 3u:
 530:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 531:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****             #if (emFile_1_WP3_EN)
 532:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 533:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****                 /* Based on physical switch state */
 534:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****                 wpState = (int)emFile_1_SPI3_WP_Read();
 535:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 536:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****             #else
 537:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
ARM GAS  D:\Windows\AppData\Local\Temp\ccaG2iBi.s 			page 16


 538:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****                 wpState = 0;
 539:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 540:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****             #endif /* (emFile_1_WP3_EN) */
 541:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 542:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****             break;
 543:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 544:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****     #endif /* (emFile_1_NUMBER_SD_CARDS == 4u) */
 545:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 546:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****     default:
 547:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 548:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****         #if (emFile_1_WP0_EN)
 549:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 550:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****               /* Based on physical switch state */
 551:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****             wpState = (int)emFile_1_SPI0_WP_Read();
 552:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 553:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****         #else
 554:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 555:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****             wpState = 0;
 319              		.loc 1 555 0
 320 0016 0023     		movs	r3, #0
 321 0018 FB60     		str	r3, [r7, #12]
 556:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 557:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****         #endif /* (emFile_1_WP0_EN) */
 558:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****         
 559:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****         break;
 322              		.loc 1 559 0
 323 001a 00BF     		nop
 324              	.L31:
 560:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****     }
 561:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 562:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****     return(wpState);
 325              		.loc 1 562 0
 326 001c FB68     		ldr	r3, [r7, #12]
 563:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** }
 327              		.loc 1 563 0
 328 001e 1846     		mov	r0, r3
 329 0020 1437     		adds	r7, r7, #20
 330              		.cfi_def_cfa_offset 4
 331 0022 BD46     		mov	sp, r7
 332              		.cfi_def_cfa_register 13
 333              		@ sp needed
 334 0024 5DF8047B 		ldr	r7, [sp], #4
 335              		.cfi_restore 7
 336              		.cfi_def_cfa_offset 0
 337 0028 7047     		bx	lr
 338              		.cfi_endproc
 339              	.LFE67:
 340              		.size	FS_MMC_HW_X_IsWriteProtected, .-FS_MMC_HW_X_IsWriteProtected
 341 002a 00BF     		.section	.text.FS_MMC_HW_X_SetMaxSpeed,"ax",%progbits
 342              		.align	2
 343              		.global	FS_MMC_HW_X_SetMaxSpeed
 344              		.thumb
 345              		.thumb_func
 346              		.type	FS_MMC_HW_X_SetMaxSpeed, %function
 347              	FS_MMC_HW_X_SetMaxSpeed:
 348              	.LFB68:
 564:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
ARM GAS  D:\Windows\AppData\Local\Temp\ccaG2iBi.s 			page 17


 565:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 566:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** /*******************************************************************************
 567:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** * Function Name: FS_MMC_HW_X_SetMaxSpeed
 568:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** ********************************************************************************
 569:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** *
 570:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** * Summary:
 571:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** *  FS low level function. Sets the SPI interface to a maximum frequency.
 572:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** *  Make sure that you set the frequency lower or equal but never higher
 573:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** *  than the given value. Recommended startup frequency is 100kHz - 400kHz.
 574:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** *
 575:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** * Parameters:
 576:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** *  Unit             - Device Index;
 577:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** *  MaxFreq          - SPI clock frequency in kHz.
 578:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** *
 579:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** * Return:
 580:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** *  max. frequency   - the maximum frequency set in kHz;
 581:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** *  0                - the frequency could not be set.
 582:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** *
 583:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** * Reentrant:
 584:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** *  No
 585:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** *
 586:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** *******************************************************************************/
 587:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** U16 FS_MMC_HW_X_SetMaxSpeed(U8 Unit, U16 MaxFreq)
 588:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** {
 349              		.loc 1 588 0
 350              		.cfi_startproc
 351              		@ args = 0, pretend = 0, frame = 16
 352              		@ frame_needed = 1, uses_anonymous_args = 0
 353 0000 80B5     		push	{r7, lr}
 354              		.cfi_def_cfa_offset 8
 355              		.cfi_offset 7, -8
 356              		.cfi_offset 14, -4
 357 0002 84B0     		sub	sp, sp, #16
 358              		.cfi_def_cfa_offset 24
 359 0004 00AF     		add	r7, sp, #0
 360              		.cfi_def_cfa_register 7
 361 0006 0346     		mov	r3, r0
 362 0008 0A46     		mov	r2, r1
 363 000a FB71     		strb	r3, [r7, #7]
 364 000c 1346     		mov	r3, r2	@ movhi
 365 000e BB80     		strh	r3, [r7, #4]	@ movhi
 589:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****     U16 freq;
 590:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****     U32 divResult;
 591:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 592:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****     if(MaxFreq < emFile_1_STARTUP_FREQ)
 366              		.loc 1 592 0
 367 0010 BB88     		ldrh	r3, [r7, #4]
 368 0012 B3F5C87F 		cmp	r3, #400
 369 0016 03D2     		bcs	.L35
 593:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****     {
 594:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****         MaxFreq = emFile_1_STARTUP_FREQ;
 370              		.loc 1 594 0
 371 0018 4FF4C873 		mov	r3, #400
 372 001c BB80     		strh	r3, [r7, #4]	@ movhi
 373 001e 07E0     		b	.L36
 374              	.L35:
 595:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****     }
ARM GAS  D:\Windows\AppData\Local\Temp\ccaG2iBi.s 			page 18


 596:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****     else if(MaxFreq > emFile_1_MAX_SPI_FREQ)
 375              		.loc 1 596 0
 376 0020 BB88     		ldrh	r3, [r7, #4]
 377 0022 42F21072 		movw	r2, #10000
 378 0026 9342     		cmp	r3, r2
 379 0028 02D9     		bls	.L36
 597:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****     {
 598:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****         MaxFreq = emFile_1_MAX_SPI_FREQ;
 380              		.loc 1 598 0
 381 002a 42F21073 		movw	r3, #10000
 382 002e BB80     		strh	r3, [r7, #4]	@ movhi
 383              	.L36:
 599:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****     }
 600:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****     else
 601:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****     {
 602:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****         /* Do nothing */
 603:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****     }
 604:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 605:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****     freq = MaxFreq << 1u;
 384              		.loc 1 605 0
 385 0030 BB88     		ldrh	r3, [r7, #4]	@ movhi
 386 0032 5B00     		lsls	r3, r3, #1
 387 0034 FB81     		strh	r3, [r7, #14]	@ movhi
 606:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 607:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****     divResult = ((U32) BCLK__BUS_CLK__KHZ)/((U32) freq);
 388              		.loc 1 607 0
 389 0036 FB89     		ldrh	r3, [r7, #14]
 390 0038 45F6C052 		movw	r2, #24000
 391 003c B2FBF3F3 		udiv	r3, r2, r3
 392 0040 9BB2     		uxth	r3, r3
 393 0042 BB60     		str	r3, [r7, #8]
 608:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 609:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****     switch(Unit)
 394              		.loc 1 609 0
 395 0044 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 396 0046 002B     		cmp	r3, #0
 397 0048 0CD1     		bne	.L41
 610:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****     {
 611:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****         case 0u:
 612:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****             emFile_1_Clock_1_Stop();
 398              		.loc 1 612 0
 399 004a FFF7FEFF 		bl	emFile_1_Clock_1_Stop
 613:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****             emFile_1_Clock_1_SetDividerValue((U16)divResult);    /* update the frequency */
 400              		.loc 1 613 0
 401 004e BB68     		ldr	r3, [r7, #8]
 402 0050 9BB2     		uxth	r3, r3
 403 0052 013B     		subs	r3, r3, #1
 404 0054 9BB2     		uxth	r3, r3
 405 0056 1846     		mov	r0, r3
 406 0058 0121     		movs	r1, #1
 407 005a FFF7FEFF 		bl	emFile_1_Clock_1_SetDividerRegister
 614:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****             emFile_1_Clock_1_Start();
 408              		.loc 1 614 0
 409 005e FFF7FEFF 		bl	emFile_1_Clock_1_Start
 615:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****             break;
 410              		.loc 1 615 0
 411 0062 0CE0     		b	.L39
ARM GAS  D:\Windows\AppData\Local\Temp\ccaG2iBi.s 			page 19


 412              	.L41:
 616:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 617:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****         #if (emFile_1_NUMBER_SD_CARDS >= 2u)
 618:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 619:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****         case 1u:
 620:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 621:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****             emFile_1_Clock_2_Stop();
 622:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****             emFile_1_Clock_2_SetDividerValue((U16)divResult);    /* update the frequency */
 623:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****             emFile_1_Clock_2_Start();
 624:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****             break;
 625:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 626:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****         #endif /* (emFile_1_NUMBER_SD_CARDS >= 2u) */
 627:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 628:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****         #if (emFile_1_NUMBER_SD_CARDS >= 3u)
 629:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 630:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****         case 2u:
 631:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 632:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****             emFile_1_Clock_3_Stop();
 633:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****             emFile_1_Clock_3_SetDividerValue((U16)divResult);    /* update the frequency */
 634:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****             emFile_1_Clock_3_Start();
 635:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****             break;
 636:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 637:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****         #endif /* (emFile_1_NUMBER_SD_CARDS >= 3u) */
 638:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 639:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****         #if (emFile_1_NUMBER_SD_CARDS == 4u)
 640:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 641:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****         case 3u:
 642:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 643:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****             emFile_1_Clock_4_Stop();
 644:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****             emFile_1_Clock_4_SetDividerValue((U16)divResult);    /* update the frequency */
 645:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****             emFile_1_Clock_4_Start();
 646:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****             break;
 647:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 648:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****         #endif /* (emFile_1_NUMBER_SD_CARDS == 4u) */
 649:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 650:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****         default:
 651:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****             emFile_1_Clock_1_Stop();
 413              		.loc 1 651 0
 414 0064 FFF7FEFF 		bl	emFile_1_Clock_1_Stop
 652:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****             emFile_1_Clock_1_SetDividerValue((U16)divResult);    /* update the frequency */
 415              		.loc 1 652 0
 416 0068 BB68     		ldr	r3, [r7, #8]
 417 006a 9BB2     		uxth	r3, r3
 418 006c 013B     		subs	r3, r3, #1
 419 006e 9BB2     		uxth	r3, r3
 420 0070 1846     		mov	r0, r3
 421 0072 0121     		movs	r1, #1
 422 0074 FFF7FEFF 		bl	emFile_1_Clock_1_SetDividerRegister
 653:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****             emFile_1_Clock_1_Start();
 423              		.loc 1 653 0
 424 0078 FFF7FEFF 		bl	emFile_1_Clock_1_Start
 654:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****             break;
 425              		.loc 1 654 0
 426 007c 00BF     		nop
 427              	.L39:
 655:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****     }
 656:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
ARM GAS  D:\Windows\AppData\Local\Temp\ccaG2iBi.s 			page 20


 657:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****     return (MaxFreq);
 428              		.loc 1 657 0
 429 007e BB88     		ldrh	r3, [r7, #4]
 658:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 659:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** }
 430              		.loc 1 659 0
 431 0080 1846     		mov	r0, r3
 432 0082 1037     		adds	r7, r7, #16
 433              		.cfi_def_cfa_offset 8
 434 0084 BD46     		mov	sp, r7
 435              		.cfi_def_cfa_register 13
 436              		@ sp needed
 437 0086 80BD     		pop	{r7, pc}
 438              		.cfi_endproc
 439              	.LFE68:
 440              		.size	FS_MMC_HW_X_SetMaxSpeed, .-FS_MMC_HW_X_SetMaxSpeed
 441              		.section	.text.FS_MMC_HW_X_SetVoltage,"ax",%progbits
 442              		.align	2
 443              		.global	FS_MMC_HW_X_SetVoltage
 444              		.thumb
 445              		.thumb_func
 446              		.type	FS_MMC_HW_X_SetVoltage, %function
 447              	FS_MMC_HW_X_SetVoltage:
 448              	.LFB69:
 660:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 661:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 662:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** /*******************************************************************************
 663:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** * Function Name: FS_MMC_HW_X_SetVoltage
 664:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** ********************************************************************************
 665:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** *
 666:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** * Summary:
 667:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** *  FS low level function. Be sure that your card slot si within the given
 668:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** *  voltage range. Return 1 if your slot can support the required voltage,
 669:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** *  and if not, return 0.
 670:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** *
 671:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** * Parameters:
 672:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** *  Unit             - Device Index;
 673:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** *  Vmin             - Minimum supply voltage in mV;
 674:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** *  Vmin             - Maximum supply voltage in mV.
 675:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** *
 676:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** * Return:
 677:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** *  1                - the card slot supports the voltage range;
 678:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** *  0                - the card slot does not support the voltage range.
 679:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** *
 680:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** * Reentrant:
 681:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** *  No
 682:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** *
 683:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** *******************************************************************************/
 684:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** int FS_MMC_HW_X_SetVoltage(U8 Unit, U16 Vmin, U16 Vmax)
 685:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** {
 449              		.loc 1 685 0
 450              		.cfi_startproc
 451              		@ args = 0, pretend = 0, frame = 16
 452              		@ frame_needed = 1, uses_anonymous_args = 0
 453              		@ link register save eliminated.
 454 0000 80B4     		push	{r7}
 455              		.cfi_def_cfa_offset 4
ARM GAS  D:\Windows\AppData\Local\Temp\ccaG2iBi.s 			page 21


 456              		.cfi_offset 7, -4
 457 0002 85B0     		sub	sp, sp, #20
 458              		.cfi_def_cfa_offset 24
 459 0004 00AF     		add	r7, sp, #0
 460              		.cfi_def_cfa_register 7
 461 0006 0346     		mov	r3, r0
 462 0008 FB71     		strb	r3, [r7, #7]
 463 000a 0B46     		mov	r3, r1	@ movhi
 464 000c BB80     		strh	r3, [r7, #4]	@ movhi
 465 000e 1346     		mov	r3, r2	@ movhi
 466 0010 7B80     		strh	r3, [r7, #2]	@ movhi
 686:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****     int result;
 687:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 688:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****     switch(Unit)
 467              		.loc 1 688 0
 468 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 469 0014 0033     		adds	r3, r3, #0
 470 0016 032B     		cmp	r3, #3
 471 0018 0FD8     		bhi	.L43
 689:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****     {
 690:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****     case 0u:
 691:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 692:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****     case 1u:
 693:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 694:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****     case 2u:
 695:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 696:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****     case 3u:
 697:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 698:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****         if((Vmin <= emFile_1_MMC_DEFAULT_SUPPLY_VOLTAGE) &&
 472              		.loc 1 698 0
 473 001a BB88     		ldrh	r3, [r7, #4]
 474 001c 40F6E442 		movw	r2, #3300
 475 0020 9342     		cmp	r3, r2
 476 0022 07D8     		bhi	.L45
 477              		.loc 1 698 0 is_stmt 0 discriminator 1
 478 0024 7B88     		ldrh	r3, [r7, #2]
 479 0026 40F6E342 		movw	r2, #3299
 480 002a 9342     		cmp	r3, r2
 481 002c 02D9     		bls	.L45
 699:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****             (emFile_1_MMC_DEFAULT_SUPPLY_VOLTAGE <= Vmax))
 700:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****         {
 701:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****             result = emFile_1_RET_SUCCCESS;
 482              		.loc 1 701 0 is_stmt 1
 483 002e 0123     		movs	r3, #1
 484 0030 FB60     		str	r3, [r7, #12]
 702:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****         }
 703:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****         else
 704:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****         {
 705:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****             result = emFile_1_RET_FAIL;
 706:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****         }
 707:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 708:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****         break;
 485              		.loc 1 708 0
 486 0032 12E0     		b	.L47
 487              	.L45:
 705:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****         }
 488              		.loc 1 705 0
ARM GAS  D:\Windows\AppData\Local\Temp\ccaG2iBi.s 			page 22


 489 0034 0023     		movs	r3, #0
 490 0036 FB60     		str	r3, [r7, #12]
 491              		.loc 1 708 0
 492 0038 0FE0     		b	.L47
 493              	.L43:
 709:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 710:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****     default:
 711:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 712:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****         if((Vmin <= emFile_1_MMC_DEFAULT_SUPPLY_VOLTAGE) &&
 494              		.loc 1 712 0
 495 003a BB88     		ldrh	r3, [r7, #4]
 496 003c 40F6E442 		movw	r2, #3300
 497 0040 9342     		cmp	r3, r2
 498 0042 07D8     		bhi	.L48
 499              		.loc 1 712 0 is_stmt 0 discriminator 1
 500 0044 7B88     		ldrh	r3, [r7, #2]
 501 0046 40F6E342 		movw	r2, #3299
 502 004a 9342     		cmp	r3, r2
 503 004c 02D9     		bls	.L48
 713:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****             (emFile_1_MMC_DEFAULT_SUPPLY_VOLTAGE <= Vmax))
 714:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****         {
 715:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****             result = emFile_1_RET_SUCCCESS;
 504              		.loc 1 715 0 is_stmt 1
 505 004e 0123     		movs	r3, #1
 506 0050 FB60     		str	r3, [r7, #12]
 716:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****         }
 717:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****         else
 718:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****         {
 719:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****             result = emFile_1_RET_FAIL;
 720:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****         }
 721:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****         
 722:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****         break;
 507              		.loc 1 722 0
 508 0052 01E0     		b	.L51
 509              	.L48:
 719:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****         }
 510              		.loc 1 719 0
 511 0054 0023     		movs	r3, #0
 512 0056 FB60     		str	r3, [r7, #12]
 513              	.L51:
 514              		.loc 1 722 0
 515 0058 00BF     		nop
 516              	.L47:
 723:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****     }
 724:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 725:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****     return(result);
 517              		.loc 1 725 0
 518 005a FB68     		ldr	r3, [r7, #12]
 726:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** }
 519              		.loc 1 726 0
 520 005c 1846     		mov	r0, r3
 521 005e 1437     		adds	r7, r7, #20
 522              		.cfi_def_cfa_offset 4
 523 0060 BD46     		mov	sp, r7
 524              		.cfi_def_cfa_register 13
 525              		@ sp needed
 526 0062 5DF8047B 		ldr	r7, [sp], #4
ARM GAS  D:\Windows\AppData\Local\Temp\ccaG2iBi.s 			page 23


 527              		.cfi_restore 7
 528              		.cfi_def_cfa_offset 0
 529 0066 7047     		bx	lr
 530              		.cfi_endproc
 531              	.LFE69:
 532              		.size	FS_MMC_HW_X_SetVoltage, .-FS_MMC_HW_X_SetVoltage
 533              		.section	.text.FS_MMC_HW_X_IsPresent,"ax",%progbits
 534              		.align	2
 535              		.global	FS_MMC_HW_X_IsPresent
 536              		.thumb
 537              		.thumb_func
 538              		.type	FS_MMC_HW_X_IsPresent, %function
 539              	FS_MMC_HW_X_IsPresent:
 540              	.LFB70:
 727:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 728:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 729:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** /*******************************************************************************
 730:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** * Function Name: FS_MMC_HW_X_IsPresent
 731:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** ********************************************************************************
 732:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** *
 733:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** * Summary:
 734:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** *  Returns the state of the media. If you do not know the state, return
 735:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** *  FS_MEDIA_STATE_UNKNOWN and the higher layer will try to figure out if
 736:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** *  a media is present.
 737:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** *
 738:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** * Parameters:
 739:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** *  Unit                      - Device Index.
 740:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** *
 741:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** * Return:
 742:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** *  FS_MEDIA_STATE_UNKNOWN    - Media state is unknown;
 743:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** *  FS_MEDIA_NOT_PRESENT      - Media is not present;
 744:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** *  FS_MEDIA_IS_PRESENT       - Media is present.
 745:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** *
 746:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** * Reentrant:
 747:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** *  No
 748:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** *
 749:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** *******************************************************************************/
 750:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** int FS_MMC_HW_X_IsPresent(U8 Unit)
 751:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** {
 541              		.loc 1 751 0
 542              		.cfi_startproc
 543              		@ args = 0, pretend = 0, frame = 16
 544              		@ frame_needed = 1, uses_anonymous_args = 0
 545 0000 80B5     		push	{r7, lr}
 546              		.cfi_def_cfa_offset 8
 547              		.cfi_offset 7, -8
 548              		.cfi_offset 14, -4
 549 0002 84B0     		sub	sp, sp, #16
 550              		.cfi_def_cfa_offset 24
 551 0004 00AF     		add	r7, sp, #0
 552              		.cfi_def_cfa_register 7
 553 0006 0346     		mov	r3, r0
 554 0008 FB71     		strb	r3, [r7, #7]
 752:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****      int result;
 753:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 754:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****     emFile_1_Init(Unit);
 555              		.loc 1 754 0
ARM GAS  D:\Windows\AppData\Local\Temp\ccaG2iBi.s 			page 24


 556 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 557 000c 1846     		mov	r0, r3
 558 000e FFF7FEFF 		bl	emFile_1_Init
 755:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 756:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****     switch(Unit)
 559              		.loc 1 756 0
 560 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 561 0014 0033     		adds	r3, r3, #0
 562 0016 032B     		cmp	r3, #3
 563 0018 02D8     		bhi	.L53
 757:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****     {
 758:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****     case 0u:
 759:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 760:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****     case 1u:
 761:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 762:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****     case 2u:
 763:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 764:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****     case 3u:
 765:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 766:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****         result = FS_MEDIA_STATE_UNKNOWN;
 564              		.loc 1 766 0
 565 001a 0223     		movs	r3, #2
 566 001c FB60     		str	r3, [r7, #12]
 767:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****         break;
 567              		.loc 1 767 0
 568 001e 02E0     		b	.L55
 569              	.L53:
 768:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 769:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****     default:
 770:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 771:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****         result = FS_MEDIA_STATE_UNKNOWN;
 570              		.loc 1 771 0
 571 0020 0223     		movs	r3, #2
 572 0022 FB60     		str	r3, [r7, #12]
 772:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****         break;
 573              		.loc 1 772 0
 574 0024 00BF     		nop
 575              	.L55:
 773:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****     }
 774:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 775:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****     return(result);
 576              		.loc 1 775 0
 577 0026 FB68     		ldr	r3, [r7, #12]
 776:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** }
 578              		.loc 1 776 0
 579 0028 1846     		mov	r0, r3
 580 002a 1037     		adds	r7, r7, #16
 581              		.cfi_def_cfa_offset 8
 582 002c BD46     		mov	sp, r7
 583              		.cfi_def_cfa_register 13
 584              		@ sp needed
 585 002e 80BD     		pop	{r7, pc}
 586              		.cfi_endproc
 587              	.LFE70:
 588              		.size	FS_MMC_HW_X_IsPresent, .-FS_MMC_HW_X_IsPresent
 589              		.section	.text.FS_MMC_HW_X_Read,"ax",%progbits
 590              		.align	2
ARM GAS  D:\Windows\AppData\Local\Temp\ccaG2iBi.s 			page 25


 591              		.global	FS_MMC_HW_X_Read
 592              		.thumb
 593              		.thumb_func
 594              		.type	FS_MMC_HW_X_Read, %function
 595              	FS_MMC_HW_X_Read:
 596              	.LFB71:
 777:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 778:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 779:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** /*******************************************************************************
 780:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** * Function Name: FS_MMC_HW_X_Read
 781:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** ********************************************************************************
 782:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** *
 783:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** * Summary:
 784:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** *  FS low level function. Reads a specified number of bytes from MMC card to 
 785:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** *  buffer.
 786:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** *
 787:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** * Parameters:
 788:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** *    Unit             - Device Index;
 789:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** *    pData            - Pointer to a data buffer;
 790:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** *    NumBytes         - Number of bytes.
 791:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** *
 792:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** * Return:
 793:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** *  None
 794:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** *
 795:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** * Reentrant:
 796:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** *  No
 797:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** *
 798:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** *******************************************************************************/
 799:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** #if (CY_PSOC5)
 800:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****     void  FS_MMC_HW_X_Read (U8 Unit, U8 * pData, int NumBytes)
 801:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****     {
 597              		.loc 1 801 0
 598              		.cfi_startproc
 599              		@ args = 0, pretend = 0, frame = 16
 600              		@ frame_needed = 1, uses_anonymous_args = 0
 601 0000 90B5     		push	{r4, r7, lr}
 602              		.cfi_def_cfa_offset 12
 603              		.cfi_offset 4, -12
 604              		.cfi_offset 7, -8
 605              		.cfi_offset 14, -4
 606 0002 85B0     		sub	sp, sp, #20
 607              		.cfi_def_cfa_offset 32
 608 0004 00AF     		add	r7, sp, #0
 609              		.cfi_def_cfa_register 7
 610 0006 0346     		mov	r3, r0
 611 0008 B960     		str	r1, [r7, #8]
 612 000a 7A60     		str	r2, [r7, #4]
 613 000c FB73     		strb	r3, [r7, #15]
 614              	.L58:
 802:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****         do
 803:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****         {
 804:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****             *pData++ = emFile_1_ReadWriteSPI(Unit, 0xff);
 615              		.loc 1 804 0 discriminator 1
 616 000e BC68     		ldr	r4, [r7, #8]
 617 0010 631C     		adds	r3, r4, #1
 618 0012 BB60     		str	r3, [r7, #8]
 619 0014 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
ARM GAS  D:\Windows\AppData\Local\Temp\ccaG2iBi.s 			page 26


 620 0016 1846     		mov	r0, r3
 621 0018 FF21     		movs	r1, #255
 622 001a FFF7FEFF 		bl	emFile_1_ReadWriteSPI
 623 001e 0346     		mov	r3, r0
 624 0020 2370     		strb	r3, [r4]
 805:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****         } while (--NumBytes);
 625              		.loc 1 805 0 discriminator 1
 626 0022 7B68     		ldr	r3, [r7, #4]
 627 0024 013B     		subs	r3, r3, #1
 628 0026 7B60     		str	r3, [r7, #4]
 629 0028 7B68     		ldr	r3, [r7, #4]
 630 002a 002B     		cmp	r3, #0
 631 002c EFD1     		bne	.L58
 806:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****     }
 632              		.loc 1 806 0
 633 002e 1437     		adds	r7, r7, #20
 634              		.cfi_def_cfa_offset 12
 635 0030 BD46     		mov	sp, r7
 636              		.cfi_def_cfa_register 13
 637              		@ sp needed
 638 0032 90BD     		pop	{r4, r7, pc}
 639              		.cfi_endproc
 640              	.LFE71:
 641              		.size	FS_MMC_HW_X_Read, .-FS_MMC_HW_X_Read
 642              		.section	.text.FS_MMC_HW_X_Write,"ax",%progbits
 643              		.align	2
 644              		.global	FS_MMC_HW_X_Write
 645              		.thumb
 646              		.thumb_func
 647              		.type	FS_MMC_HW_X_Write, %function
 648              	FS_MMC_HW_X_Write:
 649              	.LFB72:
 807:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** #else
 808:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****     void  FS_MMC_HW_X_Read (U8 Unit, U8 xdata * pData, int NumBytes)
 809:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****     {
 810:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****         do
 811:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****         {
 812:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****             *pData++ = emFile_1_ReadWriteSPI(Unit, 0xff);
 813:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****         } while (--NumBytes);
 814:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****     }
 815:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** #endif /* (CY_PSOC5) */
 816:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 817:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** 
 818:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** /*******************************************************************************
 819:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** * Function Name: FS_MMC_HW_X_Write
 820:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** ********************************************************************************
 821:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** *
 822:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** * Summary:
 823:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** *  FS low level function. Writes a specified number of bytes from
 824:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** *  data buffer to the MMC/SD card.
 825:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** *
 826:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** * Parameters:
 827:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** *    Unit             - Device Index;
 828:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** *    pData            - Pointer to a data buffer;
 829:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** *    NumBytes         - Number of bytes.
 830:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** *
 831:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** * Return:
ARM GAS  D:\Windows\AppData\Local\Temp\ccaG2iBi.s 			page 27


 832:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** *  None
 833:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** *
 834:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** * Reentrant:
 835:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** *  No
 836:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** *
 837:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** *******************************************************************************/
 838:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c **** #if (CY_PSOC5)
 839:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****     void  FS_MMC_HW_X_Write(U8 Unit, const U8 * pData, int NumBytes) 
 840:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****     {
 650              		.loc 1 840 0
 651              		.cfi_startproc
 652              		@ args = 0, pretend = 0, frame = 16
 653              		@ frame_needed = 1, uses_anonymous_args = 0
 654 0000 80B5     		push	{r7, lr}
 655              		.cfi_def_cfa_offset 8
 656              		.cfi_offset 7, -8
 657              		.cfi_offset 14, -4
 658 0002 84B0     		sub	sp, sp, #16
 659              		.cfi_def_cfa_offset 24
 660 0004 00AF     		add	r7, sp, #0
 661              		.cfi_def_cfa_register 7
 662 0006 0346     		mov	r3, r0
 663 0008 B960     		str	r1, [r7, #8]
 664 000a 7A60     		str	r2, [r7, #4]
 665 000c FB73     		strb	r3, [r7, #15]
 666              	.L60:
 841:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****         do
 842:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****         {
 843:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****             emFile_1_ReadWriteSPI(Unit, *pData++);
 667              		.loc 1 843 0 discriminator 1
 668 000e BB68     		ldr	r3, [r7, #8]
 669 0010 5A1C     		adds	r2, r3, #1
 670 0012 BA60     		str	r2, [r7, #8]
 671 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 672 0016 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 673 0018 1046     		mov	r0, r2
 674 001a 1946     		mov	r1, r3
 675 001c FFF7FEFF 		bl	emFile_1_ReadWriteSPI
 844:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****         } while (--NumBytes);
 676              		.loc 1 844 0 discriminator 1
 677 0020 7B68     		ldr	r3, [r7, #4]
 678 0022 013B     		subs	r3, r3, #1
 679 0024 7B60     		str	r3, [r7, #4]
 680 0026 7B68     		ldr	r3, [r7, #4]
 681 0028 002B     		cmp	r3, #0
 682 002a F0D1     		bne	.L60
 845:Generated_Source\PSoC5/emFile_1_MMC_HW_SPI.c ****     }
 683              		.loc 1 845 0
 684 002c 1037     		adds	r7, r7, #16
 685              		.cfi_def_cfa_offset 8
 686 002e BD46     		mov	sp, r7
 687              		.cfi_def_cfa_register 13
 688              		@ sp needed
 689 0030 80BD     		pop	{r7, pc}
 690              		.cfi_endproc
 691              	.LFE72:
 692              		.size	FS_MMC_HW_X_Write, .-FS_MMC_HW_X_Write
ARM GAS  D:\Windows\AppData\Local\Temp\ccaG2iBi.s 			page 28


 693 0032 00BF     		.text
 694              	.Letext0:
 695              		.file 2 "d:\\programming\\cypress\\psoc creator\\4.0\\psoc creator\\import\\gnu\\arm\\4.9.3\\arm-n
 696              		.file 3 "d:\\programming\\cypress\\psoc creator\\4.0\\psoc creator\\import\\gnu\\arm\\4.9.3\\arm-n
 697              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 698              		.file 5 "Generated_Source\\PSoC5/core_cm3.h"
 699              		.section	.debug_info,"",%progbits
 700              	.Ldebug_info0:
 701 0000 35030000 		.4byte	0x335
 702 0004 0400     		.2byte	0x4
 703 0006 00000000 		.4byte	.Ldebug_abbrev0
 704 000a 04       		.byte	0x4
 705 000b 01       		.uleb128 0x1
 706 000c 87000000 		.4byte	.LASF37
 707 0010 01       		.byte	0x1
 708 0011 CD020000 		.4byte	.LASF38
 709 0015 15000000 		.4byte	.LASF39
 710 0019 00000000 		.4byte	.Ldebug_ranges0+0
 711 001d 00000000 		.4byte	0
 712 0021 00000000 		.4byte	.Ldebug_line0
 713 0025 02       		.uleb128 0x2
 714 0026 02       		.byte	0x2
 715 0027 07       		.byte	0x7
 716 0028 5B010000 		.4byte	.LASF0
 717 002c 02       		.uleb128 0x2
 718 002d 04       		.byte	0x4
 719 002e 07       		.byte	0x7
 720 002f 8C010000 		.4byte	.LASF1
 721 0033 02       		.uleb128 0x2
 722 0034 04       		.byte	0x4
 723 0035 07       		.byte	0x7
 724 0036 E7010000 		.4byte	.LASF2
 725 003a 03       		.uleb128 0x3
 726 003b 04       		.byte	0x4
 727 003c 05       		.byte	0x5
 728 003d 696E7400 		.ascii	"int\000"
 729 0041 02       		.uleb128 0x2
 730 0042 01       		.byte	0x1
 731 0043 08       		.byte	0x8
 732 0044 2D010000 		.4byte	.LASF3
 733 0048 02       		.uleb128 0x2
 734 0049 04       		.byte	0x4
 735 004a 07       		.byte	0x7
 736 004b 44020000 		.4byte	.LASF4
 737 004f 02       		.uleb128 0x2
 738 0050 01       		.byte	0x1
 739 0051 08       		.byte	0x8
 740 0052 64020000 		.4byte	.LASF5
 741 0056 02       		.uleb128 0x2
 742 0057 02       		.byte	0x2
 743 0058 05       		.byte	0x5
 744 0059 B5010000 		.4byte	.LASF6
 745 005d 02       		.uleb128 0x2
 746 005e 04       		.byte	0x4
 747 005f 05       		.byte	0x5
 748 0060 79020000 		.4byte	.LASF7
 749 0064 04       		.uleb128 0x4
ARM GAS  D:\Windows\AppData\Local\Temp\ccaG2iBi.s 			page 29


 750 0065 04       		.byte	0x4
 751 0066 41000000 		.4byte	0x41
 752 006a 02       		.uleb128 0x2
 753 006b 01       		.byte	0x1
 754 006c 06       		.byte	0x6
 755 006d 90020000 		.4byte	.LASF8
 756 0071 05       		.uleb128 0x5
 757 0072 7D000000 		.4byte	.LASF11
 758 0076 02       		.byte	0x2
 759 0077 3F       		.byte	0x3f
 760 0078 5D000000 		.4byte	0x5d
 761 007c 02       		.uleb128 0x2
 762 007d 08       		.byte	0x8
 763 007e 05       		.byte	0x5
 764 007f 4D020000 		.4byte	.LASF9
 765 0083 02       		.uleb128 0x2
 766 0084 08       		.byte	0x8
 767 0085 07       		.byte	0x7
 768 0086 07020000 		.4byte	.LASF10
 769 008a 05       		.uleb128 0x5
 770 008b 3C020000 		.4byte	.LASF12
 771 008f 03       		.byte	0x3
 772 0090 2C       		.byte	0x2c
 773 0091 71000000 		.4byte	0x71
 774 0095 06       		.uleb128 0x6
 775 0096 73020000 		.4byte	.LASF13
 776 009a 04       		.byte	0x4
 777 009b 9201     		.2byte	0x192
 778 009d 41000000 		.4byte	0x41
 779 00a1 02       		.uleb128 0x2
 780 00a2 04       		.byte	0x4
 781 00a3 04       		.byte	0x4
 782 00a4 27010000 		.4byte	.LASF14
 783 00a8 02       		.uleb128 0x2
 784 00a9 08       		.byte	0x8
 785 00aa 04       		.byte	0x4
 786 00ab 15010000 		.4byte	.LASF15
 787 00af 07       		.uleb128 0x7
 788 00b0 82020000 		.4byte	.LASF40
 789 00b4 01       		.byte	0x1
 790 00b5 4B       		.byte	0x4b
 791 00b6 00000000 		.4byte	.LFB63
 792 00ba 64000000 		.4byte	.LFE63-.LFB63
 793 00be 01       		.uleb128 0x1
 794 00bf 9C       		.byte	0x9c
 795 00c0 D3000000 		.4byte	0xd3
 796 00c4 08       		.uleb128 0x8
 797 00c5 9C020000 		.4byte	.LASF16
 798 00c9 01       		.byte	0x1
 799 00ca 4B       		.byte	0x4b
 800 00cb 41000000 		.4byte	0x41
 801 00cf 02       		.uleb128 0x2
 802 00d0 91       		.byte	0x91
 803 00d1 77       		.sleb128 -9
 804 00d2 00       		.byte	0
 805 00d3 09       		.uleb128 0x9
 806 00d4 B7020000 		.4byte	.LASF41
ARM GAS  D:\Windows\AppData\Local\Temp\ccaG2iBi.s 			page 30


 807 00d8 01       		.byte	0x1
 808 00d9 E0       		.byte	0xe0
 809 00da 41000000 		.4byte	0x41
 810 00de 00000000 		.4byte	.LFB64
 811 00e2 68000000 		.4byte	.LFE64-.LFB64
 812 00e6 01       		.uleb128 0x1
 813 00e7 9C       		.byte	0x9c
 814 00e8 17010000 		.4byte	0x117
 815 00ec 08       		.uleb128 0x8
 816 00ed 9C020000 		.4byte	.LASF16
 817 00f1 01       		.byte	0x1
 818 00f2 E0       		.byte	0xe0
 819 00f3 41000000 		.4byte	0x41
 820 00f7 02       		.uleb128 0x2
 821 00f8 91       		.byte	0x91
 822 00f9 6F       		.sleb128 -17
 823 00fa 08       		.uleb128 0x8
 824 00fb 1C010000 		.4byte	.LASF17
 825 00ff 01       		.byte	0x1
 826 0100 E0       		.byte	0xe0
 827 0101 41000000 		.4byte	0x41
 828 0105 02       		.uleb128 0x2
 829 0106 91       		.byte	0x91
 830 0107 6E       		.sleb128 -18
 831 0108 0A       		.uleb128 0xa
 832 0109 53010000 		.4byte	.LASF20
 833 010d 01       		.byte	0x1
 834 010e E2       		.byte	0xe2
 835 010f 41000000 		.4byte	0x41
 836 0113 02       		.uleb128 0x2
 837 0114 91       		.byte	0x91
 838 0115 77       		.sleb128 -9
 839 0116 00       		.byte	0
 840 0117 0B       		.uleb128 0xb
 841 0118 00000000 		.4byte	.LASF18
 842 011c 01       		.byte	0x1
 843 011d 4901     		.2byte	0x149
 844 011f 00000000 		.4byte	.LFB65
 845 0123 26000000 		.4byte	.LFE65-.LFB65
 846 0127 01       		.uleb128 0x1
 847 0128 9C       		.byte	0x9c
 848 0129 3D010000 		.4byte	0x13d
 849 012d 0C       		.uleb128 0xc
 850 012e 9C020000 		.4byte	.LASF16
 851 0132 01       		.byte	0x1
 852 0133 4901     		.2byte	0x149
 853 0135 41000000 		.4byte	0x41
 854 0139 02       		.uleb128 0x2
 855 013a 91       		.byte	0x91
 856 013b 77       		.sleb128 -9
 857 013c 00       		.byte	0
 858 013d 0B       		.uleb128 0xb
 859 013e A1020000 		.4byte	.LASF19
 860 0142 01       		.byte	0x1
 861 0143 9001     		.2byte	0x190
 862 0145 00000000 		.4byte	.LFB66
 863 0149 26000000 		.4byte	.LFE66-.LFB66
ARM GAS  D:\Windows\AppData\Local\Temp\ccaG2iBi.s 			page 31


 864 014d 01       		.uleb128 0x1
 865 014e 9C       		.byte	0x9c
 866 014f 63010000 		.4byte	0x163
 867 0153 0C       		.uleb128 0xc
 868 0154 9C020000 		.4byte	.LASF16
 869 0158 01       		.byte	0x1
 870 0159 9001     		.2byte	0x190
 871 015b 41000000 		.4byte	0x41
 872 015f 02       		.uleb128 0x2
 873 0160 91       		.byte	0x91
 874 0161 77       		.sleb128 -9
 875 0162 00       		.byte	0
 876 0163 0D       		.uleb128 0xd
 877 0164 58000000 		.4byte	.LASF22
 878 0168 01       		.byte	0x1
 879 0169 D401     		.2byte	0x1d4
 880 016b 3A000000 		.4byte	0x3a
 881 016f 00000000 		.4byte	.LFB67
 882 0173 2A000000 		.4byte	.LFE67-.LFB67
 883 0177 01       		.uleb128 0x1
 884 0178 9C       		.byte	0x9c
 885 0179 9C010000 		.4byte	0x19c
 886 017d 0C       		.uleb128 0xc
 887 017e 9C020000 		.4byte	.LASF16
 888 0182 01       		.byte	0x1
 889 0183 D401     		.2byte	0x1d4
 890 0185 41000000 		.4byte	0x41
 891 0189 02       		.uleb128 0x2
 892 018a 91       		.byte	0x91
 893 018b 6F       		.sleb128 -17
 894 018c 0E       		.uleb128 0xe
 895 018d 75000000 		.4byte	.LASF21
 896 0191 01       		.byte	0x1
 897 0192 D601     		.2byte	0x1d6
 898 0194 3A000000 		.4byte	0x3a
 899 0198 02       		.uleb128 0x2
 900 0199 91       		.byte	0x91
 901 019a 74       		.sleb128 -12
 902 019b 00       		.byte	0
 903 019c 0F       		.uleb128 0xf
 904 019d 3B010000 		.4byte	.LASF23
 905 01a1 01       		.byte	0x1
 906 01a2 4B02     		.2byte	0x24b
 907 01a4 25000000 		.4byte	0x25
 908 01a8 00000000 		.4byte	.LFB68
 909 01ac 88000000 		.4byte	.LFE68-.LFB68
 910 01b0 01       		.uleb128 0x1
 911 01b1 9C       		.byte	0x9c
 912 01b2 F3010000 		.4byte	0x1f3
 913 01b6 0C       		.uleb128 0xc
 914 01b7 9C020000 		.4byte	.LASF16
 915 01bb 01       		.byte	0x1
 916 01bc 4B02     		.2byte	0x24b
 917 01be 41000000 		.4byte	0x41
 918 01c2 02       		.uleb128 0x2
 919 01c3 91       		.byte	0x91
 920 01c4 6F       		.sleb128 -17
ARM GAS  D:\Windows\AppData\Local\Temp\ccaG2iBi.s 			page 32


 921 01c5 0C       		.uleb128 0xc
 922 01c6 C9010000 		.4byte	.LASF24
 923 01ca 01       		.byte	0x1
 924 01cb 4B02     		.2byte	0x24b
 925 01cd 25000000 		.4byte	0x25
 926 01d1 02       		.uleb128 0x2
 927 01d2 91       		.byte	0x91
 928 01d3 6C       		.sleb128 -20
 929 01d4 0E       		.uleb128 0xe
 930 01d5 6E020000 		.4byte	.LASF25
 931 01d9 01       		.byte	0x1
 932 01da 4D02     		.2byte	0x24d
 933 01dc 25000000 		.4byte	0x25
 934 01e0 02       		.uleb128 0x2
 935 01e1 91       		.byte	0x91
 936 01e2 76       		.sleb128 -10
 937 01e3 0E       		.uleb128 0xe
 938 01e4 BF010000 		.4byte	.LASF26
 939 01e8 01       		.byte	0x1
 940 01e9 4E02     		.2byte	0x24e
 941 01eb 2C000000 		.4byte	0x2c
 942 01ef 02       		.uleb128 0x2
 943 01f0 91       		.byte	0x91
 944 01f1 70       		.sleb128 -16
 945 01f2 00       		.byte	0
 946 01f3 0D       		.uleb128 0xd
 947 01f4 9E010000 		.4byte	.LASF27
 948 01f8 01       		.byte	0x1
 949 01f9 AC02     		.2byte	0x2ac
 950 01fb 3A000000 		.4byte	0x3a
 951 01ff 00000000 		.4byte	.LFB69
 952 0203 68000000 		.4byte	.LFE69-.LFB69
 953 0207 01       		.uleb128 0x1
 954 0208 9C       		.byte	0x9c
 955 0209 4A020000 		.4byte	0x24a
 956 020d 0C       		.uleb128 0xc
 957 020e 9C020000 		.4byte	.LASF16
 958 0212 01       		.byte	0x1
 959 0213 AC02     		.2byte	0x2ac
 960 0215 41000000 		.4byte	0x41
 961 0219 02       		.uleb128 0x2
 962 021a 91       		.byte	0x91
 963 021b 6F       		.sleb128 -17
 964 021c 0C       		.uleb128 0xc
 965 021d 69020000 		.4byte	.LASF28
 966 0221 01       		.byte	0x1
 967 0222 AC02     		.2byte	0x2ac
 968 0224 25000000 		.4byte	0x25
 969 0228 02       		.uleb128 0x2
 970 0229 91       		.byte	0x91
 971 022a 6C       		.sleb128 -20
 972 022b 0C       		.uleb128 0xc
 973 022c 1E020000 		.4byte	.LASF29
 974 0230 01       		.byte	0x1
 975 0231 AC02     		.2byte	0x2ac
 976 0233 25000000 		.4byte	0x25
 977 0237 02       		.uleb128 0x2
ARM GAS  D:\Windows\AppData\Local\Temp\ccaG2iBi.s 			page 33


 978 0238 91       		.byte	0x91
 979 0239 6A       		.sleb128 -22
 980 023a 0E       		.uleb128 0xe
 981 023b 23020000 		.4byte	.LASF30
 982 023f 01       		.byte	0x1
 983 0240 AE02     		.2byte	0x2ae
 984 0242 3A000000 		.4byte	0x3a
 985 0246 02       		.uleb128 0x2
 986 0247 91       		.byte	0x91
 987 0248 74       		.sleb128 -12
 988 0249 00       		.byte	0
 989 024a 0F       		.uleb128 0xf
 990 024b D1010000 		.4byte	.LASF31
 991 024f 01       		.byte	0x1
 992 0250 EE02     		.2byte	0x2ee
 993 0252 3A000000 		.4byte	0x3a
 994 0256 00000000 		.4byte	.LFB70
 995 025a 30000000 		.4byte	.LFE70-.LFB70
 996 025e 01       		.uleb128 0x1
 997 025f 9C       		.byte	0x9c
 998 0260 83020000 		.4byte	0x283
 999 0264 0C       		.uleb128 0xc
 1000 0265 9C020000 		.4byte	.LASF16
 1001 0269 01       		.byte	0x1
 1002 026a EE02     		.2byte	0x2ee
 1003 026c 41000000 		.4byte	0x41
 1004 0270 02       		.uleb128 0x2
 1005 0271 91       		.byte	0x91
 1006 0272 6F       		.sleb128 -17
 1007 0273 0E       		.uleb128 0xe
 1008 0274 23020000 		.4byte	.LASF30
 1009 0278 01       		.byte	0x1
 1010 0279 F002     		.2byte	0x2f0
 1011 027b 3A000000 		.4byte	0x3a
 1012 027f 02       		.uleb128 0x2
 1013 0280 91       		.byte	0x91
 1014 0281 74       		.sleb128 -12
 1015 0282 00       		.byte	0
 1016 0283 0B       		.uleb128 0xb
 1017 0284 6E010000 		.4byte	.LASF32
 1018 0288 01       		.byte	0x1
 1019 0289 2003     		.2byte	0x320
 1020 028b 00000000 		.4byte	.LFB71
 1021 028f 34000000 		.4byte	.LFE71-.LFB71
 1022 0293 01       		.uleb128 0x1
 1023 0294 9C       		.byte	0x9c
 1024 0295 C7020000 		.4byte	0x2c7
 1025 0299 0C       		.uleb128 0xc
 1026 029a 9C020000 		.4byte	.LASF16
 1027 029e 01       		.byte	0x1
 1028 029f 2003     		.2byte	0x320
 1029 02a1 41000000 		.4byte	0x41
 1030 02a5 02       		.uleb128 0x2
 1031 02a6 91       		.byte	0x91
 1032 02a7 6F       		.sleb128 -17
 1033 02a8 0C       		.uleb128 0xc
 1034 02a9 21010000 		.4byte	.LASF33
ARM GAS  D:\Windows\AppData\Local\Temp\ccaG2iBi.s 			page 34


 1035 02ad 01       		.byte	0x1
 1036 02ae 2003     		.2byte	0x320
 1037 02b0 64000000 		.4byte	0x64
 1038 02b4 02       		.uleb128 0x2
 1039 02b5 91       		.byte	0x91
 1040 02b6 68       		.sleb128 -24
 1041 02b7 0C       		.uleb128 0xc
 1042 02b8 5B020000 		.4byte	.LASF34
 1043 02bc 01       		.byte	0x1
 1044 02bd 2003     		.2byte	0x320
 1045 02bf 3A000000 		.4byte	0x3a
 1046 02c3 02       		.uleb128 0x2
 1047 02c4 91       		.byte	0x91
 1048 02c5 64       		.sleb128 -28
 1049 02c6 00       		.byte	0
 1050 02c7 0B       		.uleb128 0xb
 1051 02c8 2A020000 		.4byte	.LASF35
 1052 02cc 01       		.byte	0x1
 1053 02cd 4703     		.2byte	0x347
 1054 02cf 00000000 		.4byte	.LFB72
 1055 02d3 32000000 		.4byte	.LFE72-.LFB72
 1056 02d7 01       		.uleb128 0x1
 1057 02d8 9C       		.byte	0x9c
 1058 02d9 0B030000 		.4byte	0x30b
 1059 02dd 0C       		.uleb128 0xc
 1060 02de 9C020000 		.4byte	.LASF16
 1061 02e2 01       		.byte	0x1
 1062 02e3 4703     		.2byte	0x347
 1063 02e5 41000000 		.4byte	0x41
 1064 02e9 02       		.uleb128 0x2
 1065 02ea 91       		.byte	0x91
 1066 02eb 77       		.sleb128 -9
 1067 02ec 0C       		.uleb128 0xc
 1068 02ed 21010000 		.4byte	.LASF33
 1069 02f1 01       		.byte	0x1
 1070 02f2 4703     		.2byte	0x347
 1071 02f4 0B030000 		.4byte	0x30b
 1072 02f8 02       		.uleb128 0x2
 1073 02f9 91       		.byte	0x91
 1074 02fa 70       		.sleb128 -16
 1075 02fb 0C       		.uleb128 0xc
 1076 02fc 5B020000 		.4byte	.LASF34
 1077 0300 01       		.byte	0x1
 1078 0301 4703     		.2byte	0x347
 1079 0303 3A000000 		.4byte	0x3a
 1080 0307 02       		.uleb128 0x2
 1081 0308 91       		.byte	0x91
 1082 0309 6C       		.sleb128 -20
 1083 030a 00       		.byte	0
 1084 030b 04       		.uleb128 0x4
 1085 030c 04       		.byte	0x4
 1086 030d 11030000 		.4byte	0x311
 1087 0311 10       		.uleb128 0x10
 1088 0312 41000000 		.4byte	0x41
 1089 0316 0A       		.uleb128 0xa
 1090 0317 F4010000 		.4byte	.LASF36
 1091 031b 01       		.byte	0x1
ARM GAS  D:\Windows\AppData\Local\Temp\ccaG2iBi.s 			page 35


 1092 031c 25       		.byte	0x25
 1093 031d 4F000000 		.4byte	0x4f
 1094 0321 05       		.uleb128 0x5
 1095 0322 03       		.byte	0x3
 1096 0323 00000000 		.4byte	emFile_1_isInited0
 1097 0327 11       		.uleb128 0x11
 1098 0328 7F010000 		.4byte	.LASF42
 1099 032c 05       		.byte	0x5
 1100 032d 9606     		.2byte	0x696
 1101 032f 33030000 		.4byte	0x333
 1102 0333 12       		.uleb128 0x12
 1103 0334 8A000000 		.4byte	0x8a
 1104 0338 00       		.byte	0
 1105              		.section	.debug_abbrev,"",%progbits
 1106              	.Ldebug_abbrev0:
 1107 0000 01       		.uleb128 0x1
 1108 0001 11       		.uleb128 0x11
 1109 0002 01       		.byte	0x1
 1110 0003 25       		.uleb128 0x25
 1111 0004 0E       		.uleb128 0xe
 1112 0005 13       		.uleb128 0x13
 1113 0006 0B       		.uleb128 0xb
 1114 0007 03       		.uleb128 0x3
 1115 0008 0E       		.uleb128 0xe
 1116 0009 1B       		.uleb128 0x1b
 1117 000a 0E       		.uleb128 0xe
 1118 000b 55       		.uleb128 0x55
 1119 000c 17       		.uleb128 0x17
 1120 000d 11       		.uleb128 0x11
 1121 000e 01       		.uleb128 0x1
 1122 000f 10       		.uleb128 0x10
 1123 0010 17       		.uleb128 0x17
 1124 0011 00       		.byte	0
 1125 0012 00       		.byte	0
 1126 0013 02       		.uleb128 0x2
 1127 0014 24       		.uleb128 0x24
 1128 0015 00       		.byte	0
 1129 0016 0B       		.uleb128 0xb
 1130 0017 0B       		.uleb128 0xb
 1131 0018 3E       		.uleb128 0x3e
 1132 0019 0B       		.uleb128 0xb
 1133 001a 03       		.uleb128 0x3
 1134 001b 0E       		.uleb128 0xe
 1135 001c 00       		.byte	0
 1136 001d 00       		.byte	0
 1137 001e 03       		.uleb128 0x3
 1138 001f 24       		.uleb128 0x24
 1139 0020 00       		.byte	0
 1140 0021 0B       		.uleb128 0xb
 1141 0022 0B       		.uleb128 0xb
 1142 0023 3E       		.uleb128 0x3e
 1143 0024 0B       		.uleb128 0xb
 1144 0025 03       		.uleb128 0x3
 1145 0026 08       		.uleb128 0x8
 1146 0027 00       		.byte	0
 1147 0028 00       		.byte	0
 1148 0029 04       		.uleb128 0x4
ARM GAS  D:\Windows\AppData\Local\Temp\ccaG2iBi.s 			page 36


 1149 002a 0F       		.uleb128 0xf
 1150 002b 00       		.byte	0
 1151 002c 0B       		.uleb128 0xb
 1152 002d 0B       		.uleb128 0xb
 1153 002e 49       		.uleb128 0x49
 1154 002f 13       		.uleb128 0x13
 1155 0030 00       		.byte	0
 1156 0031 00       		.byte	0
 1157 0032 05       		.uleb128 0x5
 1158 0033 16       		.uleb128 0x16
 1159 0034 00       		.byte	0
 1160 0035 03       		.uleb128 0x3
 1161 0036 0E       		.uleb128 0xe
 1162 0037 3A       		.uleb128 0x3a
 1163 0038 0B       		.uleb128 0xb
 1164 0039 3B       		.uleb128 0x3b
 1165 003a 0B       		.uleb128 0xb
 1166 003b 49       		.uleb128 0x49
 1167 003c 13       		.uleb128 0x13
 1168 003d 00       		.byte	0
 1169 003e 00       		.byte	0
 1170 003f 06       		.uleb128 0x6
 1171 0040 16       		.uleb128 0x16
 1172 0041 00       		.byte	0
 1173 0042 03       		.uleb128 0x3
 1174 0043 0E       		.uleb128 0xe
 1175 0044 3A       		.uleb128 0x3a
 1176 0045 0B       		.uleb128 0xb
 1177 0046 3B       		.uleb128 0x3b
 1178 0047 05       		.uleb128 0x5
 1179 0048 49       		.uleb128 0x49
 1180 0049 13       		.uleb128 0x13
 1181 004a 00       		.byte	0
 1182 004b 00       		.byte	0
 1183 004c 07       		.uleb128 0x7
 1184 004d 2E       		.uleb128 0x2e
 1185 004e 01       		.byte	0x1
 1186 004f 03       		.uleb128 0x3
 1187 0050 0E       		.uleb128 0xe
 1188 0051 3A       		.uleb128 0x3a
 1189 0052 0B       		.uleb128 0xb
 1190 0053 3B       		.uleb128 0x3b
 1191 0054 0B       		.uleb128 0xb
 1192 0055 27       		.uleb128 0x27
 1193 0056 19       		.uleb128 0x19
 1194 0057 11       		.uleb128 0x11
 1195 0058 01       		.uleb128 0x1
 1196 0059 12       		.uleb128 0x12
 1197 005a 06       		.uleb128 0x6
 1198 005b 40       		.uleb128 0x40
 1199 005c 18       		.uleb128 0x18
 1200 005d 9642     		.uleb128 0x2116
 1201 005f 19       		.uleb128 0x19
 1202 0060 01       		.uleb128 0x1
 1203 0061 13       		.uleb128 0x13
 1204 0062 00       		.byte	0
 1205 0063 00       		.byte	0
ARM GAS  D:\Windows\AppData\Local\Temp\ccaG2iBi.s 			page 37


 1206 0064 08       		.uleb128 0x8
 1207 0065 05       		.uleb128 0x5
 1208 0066 00       		.byte	0
 1209 0067 03       		.uleb128 0x3
 1210 0068 0E       		.uleb128 0xe
 1211 0069 3A       		.uleb128 0x3a
 1212 006a 0B       		.uleb128 0xb
 1213 006b 3B       		.uleb128 0x3b
 1214 006c 0B       		.uleb128 0xb
 1215 006d 49       		.uleb128 0x49
 1216 006e 13       		.uleb128 0x13
 1217 006f 02       		.uleb128 0x2
 1218 0070 18       		.uleb128 0x18
 1219 0071 00       		.byte	0
 1220 0072 00       		.byte	0
 1221 0073 09       		.uleb128 0x9
 1222 0074 2E       		.uleb128 0x2e
 1223 0075 01       		.byte	0x1
 1224 0076 03       		.uleb128 0x3
 1225 0077 0E       		.uleb128 0xe
 1226 0078 3A       		.uleb128 0x3a
 1227 0079 0B       		.uleb128 0xb
 1228 007a 3B       		.uleb128 0x3b
 1229 007b 0B       		.uleb128 0xb
 1230 007c 27       		.uleb128 0x27
 1231 007d 19       		.uleb128 0x19
 1232 007e 49       		.uleb128 0x49
 1233 007f 13       		.uleb128 0x13
 1234 0080 11       		.uleb128 0x11
 1235 0081 01       		.uleb128 0x1
 1236 0082 12       		.uleb128 0x12
 1237 0083 06       		.uleb128 0x6
 1238 0084 40       		.uleb128 0x40
 1239 0085 18       		.uleb128 0x18
 1240 0086 9642     		.uleb128 0x2116
 1241 0088 19       		.uleb128 0x19
 1242 0089 01       		.uleb128 0x1
 1243 008a 13       		.uleb128 0x13
 1244 008b 00       		.byte	0
 1245 008c 00       		.byte	0
 1246 008d 0A       		.uleb128 0xa
 1247 008e 34       		.uleb128 0x34
 1248 008f 00       		.byte	0
 1249 0090 03       		.uleb128 0x3
 1250 0091 0E       		.uleb128 0xe
 1251 0092 3A       		.uleb128 0x3a
 1252 0093 0B       		.uleb128 0xb
 1253 0094 3B       		.uleb128 0x3b
 1254 0095 0B       		.uleb128 0xb
 1255 0096 49       		.uleb128 0x49
 1256 0097 13       		.uleb128 0x13
 1257 0098 02       		.uleb128 0x2
 1258 0099 18       		.uleb128 0x18
 1259 009a 00       		.byte	0
 1260 009b 00       		.byte	0
 1261 009c 0B       		.uleb128 0xb
 1262 009d 2E       		.uleb128 0x2e
ARM GAS  D:\Windows\AppData\Local\Temp\ccaG2iBi.s 			page 38


 1263 009e 01       		.byte	0x1
 1264 009f 3F       		.uleb128 0x3f
 1265 00a0 19       		.uleb128 0x19
 1266 00a1 03       		.uleb128 0x3
 1267 00a2 0E       		.uleb128 0xe
 1268 00a3 3A       		.uleb128 0x3a
 1269 00a4 0B       		.uleb128 0xb
 1270 00a5 3B       		.uleb128 0x3b
 1271 00a6 05       		.uleb128 0x5
 1272 00a7 27       		.uleb128 0x27
 1273 00a8 19       		.uleb128 0x19
 1274 00a9 11       		.uleb128 0x11
 1275 00aa 01       		.uleb128 0x1
 1276 00ab 12       		.uleb128 0x12
 1277 00ac 06       		.uleb128 0x6
 1278 00ad 40       		.uleb128 0x40
 1279 00ae 18       		.uleb128 0x18
 1280 00af 9642     		.uleb128 0x2116
 1281 00b1 19       		.uleb128 0x19
 1282 00b2 01       		.uleb128 0x1
 1283 00b3 13       		.uleb128 0x13
 1284 00b4 00       		.byte	0
 1285 00b5 00       		.byte	0
 1286 00b6 0C       		.uleb128 0xc
 1287 00b7 05       		.uleb128 0x5
 1288 00b8 00       		.byte	0
 1289 00b9 03       		.uleb128 0x3
 1290 00ba 0E       		.uleb128 0xe
 1291 00bb 3A       		.uleb128 0x3a
 1292 00bc 0B       		.uleb128 0xb
 1293 00bd 3B       		.uleb128 0x3b
 1294 00be 05       		.uleb128 0x5
 1295 00bf 49       		.uleb128 0x49
 1296 00c0 13       		.uleb128 0x13
 1297 00c1 02       		.uleb128 0x2
 1298 00c2 18       		.uleb128 0x18
 1299 00c3 00       		.byte	0
 1300 00c4 00       		.byte	0
 1301 00c5 0D       		.uleb128 0xd
 1302 00c6 2E       		.uleb128 0x2e
 1303 00c7 01       		.byte	0x1
 1304 00c8 3F       		.uleb128 0x3f
 1305 00c9 19       		.uleb128 0x19
 1306 00ca 03       		.uleb128 0x3
 1307 00cb 0E       		.uleb128 0xe
 1308 00cc 3A       		.uleb128 0x3a
 1309 00cd 0B       		.uleb128 0xb
 1310 00ce 3B       		.uleb128 0x3b
 1311 00cf 05       		.uleb128 0x5
 1312 00d0 27       		.uleb128 0x27
 1313 00d1 19       		.uleb128 0x19
 1314 00d2 49       		.uleb128 0x49
 1315 00d3 13       		.uleb128 0x13
 1316 00d4 11       		.uleb128 0x11
 1317 00d5 01       		.uleb128 0x1
 1318 00d6 12       		.uleb128 0x12
 1319 00d7 06       		.uleb128 0x6
ARM GAS  D:\Windows\AppData\Local\Temp\ccaG2iBi.s 			page 39


 1320 00d8 40       		.uleb128 0x40
 1321 00d9 18       		.uleb128 0x18
 1322 00da 9742     		.uleb128 0x2117
 1323 00dc 19       		.uleb128 0x19
 1324 00dd 01       		.uleb128 0x1
 1325 00de 13       		.uleb128 0x13
 1326 00df 00       		.byte	0
 1327 00e0 00       		.byte	0
 1328 00e1 0E       		.uleb128 0xe
 1329 00e2 34       		.uleb128 0x34
 1330 00e3 00       		.byte	0
 1331 00e4 03       		.uleb128 0x3
 1332 00e5 0E       		.uleb128 0xe
 1333 00e6 3A       		.uleb128 0x3a
 1334 00e7 0B       		.uleb128 0xb
 1335 00e8 3B       		.uleb128 0x3b
 1336 00e9 05       		.uleb128 0x5
 1337 00ea 49       		.uleb128 0x49
 1338 00eb 13       		.uleb128 0x13
 1339 00ec 02       		.uleb128 0x2
 1340 00ed 18       		.uleb128 0x18
 1341 00ee 00       		.byte	0
 1342 00ef 00       		.byte	0
 1343 00f0 0F       		.uleb128 0xf
 1344 00f1 2E       		.uleb128 0x2e
 1345 00f2 01       		.byte	0x1
 1346 00f3 3F       		.uleb128 0x3f
 1347 00f4 19       		.uleb128 0x19
 1348 00f5 03       		.uleb128 0x3
 1349 00f6 0E       		.uleb128 0xe
 1350 00f7 3A       		.uleb128 0x3a
 1351 00f8 0B       		.uleb128 0xb
 1352 00f9 3B       		.uleb128 0x3b
 1353 00fa 05       		.uleb128 0x5
 1354 00fb 27       		.uleb128 0x27
 1355 00fc 19       		.uleb128 0x19
 1356 00fd 49       		.uleb128 0x49
 1357 00fe 13       		.uleb128 0x13
 1358 00ff 11       		.uleb128 0x11
 1359 0100 01       		.uleb128 0x1
 1360 0101 12       		.uleb128 0x12
 1361 0102 06       		.uleb128 0x6
 1362 0103 40       		.uleb128 0x40
 1363 0104 18       		.uleb128 0x18
 1364 0105 9642     		.uleb128 0x2116
 1365 0107 19       		.uleb128 0x19
 1366 0108 01       		.uleb128 0x1
 1367 0109 13       		.uleb128 0x13
 1368 010a 00       		.byte	0
 1369 010b 00       		.byte	0
 1370 010c 10       		.uleb128 0x10
 1371 010d 26       		.uleb128 0x26
 1372 010e 00       		.byte	0
 1373 010f 49       		.uleb128 0x49
 1374 0110 13       		.uleb128 0x13
 1375 0111 00       		.byte	0
 1376 0112 00       		.byte	0
ARM GAS  D:\Windows\AppData\Local\Temp\ccaG2iBi.s 			page 40


 1377 0113 11       		.uleb128 0x11
 1378 0114 34       		.uleb128 0x34
 1379 0115 00       		.byte	0
 1380 0116 03       		.uleb128 0x3
 1381 0117 0E       		.uleb128 0xe
 1382 0118 3A       		.uleb128 0x3a
 1383 0119 0B       		.uleb128 0xb
 1384 011a 3B       		.uleb128 0x3b
 1385 011b 05       		.uleb128 0x5
 1386 011c 49       		.uleb128 0x49
 1387 011d 13       		.uleb128 0x13
 1388 011e 3F       		.uleb128 0x3f
 1389 011f 19       		.uleb128 0x19
 1390 0120 3C       		.uleb128 0x3c
 1391 0121 19       		.uleb128 0x19
 1392 0122 00       		.byte	0
 1393 0123 00       		.byte	0
 1394 0124 12       		.uleb128 0x12
 1395 0125 35       		.uleb128 0x35
 1396 0126 00       		.byte	0
 1397 0127 49       		.uleb128 0x49
 1398 0128 13       		.uleb128 0x13
 1399 0129 00       		.byte	0
 1400 012a 00       		.byte	0
 1401 012b 00       		.byte	0
 1402              		.section	.debug_aranges,"",%progbits
 1403 0000 64000000 		.4byte	0x64
 1404 0004 0200     		.2byte	0x2
 1405 0006 00000000 		.4byte	.Ldebug_info0
 1406 000a 04       		.byte	0x4
 1407 000b 00       		.byte	0
 1408 000c 0000     		.2byte	0
 1409 000e 0000     		.2byte	0
 1410 0010 00000000 		.4byte	.LFB63
 1411 0014 64000000 		.4byte	.LFE63-.LFB63
 1412 0018 00000000 		.4byte	.LFB64
 1413 001c 68000000 		.4byte	.LFE64-.LFB64
 1414 0020 00000000 		.4byte	.LFB65
 1415 0024 26000000 		.4byte	.LFE65-.LFB65
 1416 0028 00000000 		.4byte	.LFB66
 1417 002c 26000000 		.4byte	.LFE66-.LFB66
 1418 0030 00000000 		.4byte	.LFB67
 1419 0034 2A000000 		.4byte	.LFE67-.LFB67
 1420 0038 00000000 		.4byte	.LFB68
 1421 003c 88000000 		.4byte	.LFE68-.LFB68
 1422 0040 00000000 		.4byte	.LFB69
 1423 0044 68000000 		.4byte	.LFE69-.LFB69
 1424 0048 00000000 		.4byte	.LFB70
 1425 004c 30000000 		.4byte	.LFE70-.LFB70
 1426 0050 00000000 		.4byte	.LFB71
 1427 0054 34000000 		.4byte	.LFE71-.LFB71
 1428 0058 00000000 		.4byte	.LFB72
 1429 005c 32000000 		.4byte	.LFE72-.LFB72
 1430 0060 00000000 		.4byte	0
 1431 0064 00000000 		.4byte	0
 1432              		.section	.debug_ranges,"",%progbits
 1433              	.Ldebug_ranges0:
ARM GAS  D:\Windows\AppData\Local\Temp\ccaG2iBi.s 			page 41


 1434 0000 00000000 		.4byte	.LFB63
 1435 0004 64000000 		.4byte	.LFE63
 1436 0008 00000000 		.4byte	.LFB64
 1437 000c 68000000 		.4byte	.LFE64
 1438 0010 00000000 		.4byte	.LFB65
 1439 0014 26000000 		.4byte	.LFE65
 1440 0018 00000000 		.4byte	.LFB66
 1441 001c 26000000 		.4byte	.LFE66
 1442 0020 00000000 		.4byte	.LFB67
 1443 0024 2A000000 		.4byte	.LFE67
 1444 0028 00000000 		.4byte	.LFB68
 1445 002c 88000000 		.4byte	.LFE68
 1446 0030 00000000 		.4byte	.LFB69
 1447 0034 68000000 		.4byte	.LFE69
 1448 0038 00000000 		.4byte	.LFB70
 1449 003c 30000000 		.4byte	.LFE70
 1450 0040 00000000 		.4byte	.LFB71
 1451 0044 34000000 		.4byte	.LFE71
 1452 0048 00000000 		.4byte	.LFB72
 1453 004c 32000000 		.4byte	.LFE72
 1454 0050 00000000 		.4byte	0
 1455 0054 00000000 		.4byte	0
 1456              		.section	.debug_line,"",%progbits
 1457              	.Ldebug_line0:
 1458 0000 86020000 		.section	.debug_str,"MS",%progbits,1
 1458      02004601 
 1458      00000201 
 1458      FB0E0D00 
 1458      01010101 
 1459              	.LASF18:
 1460 0000 46535F4D 		.ascii	"FS_MMC_HW_X_EnableCS\000"
 1460      4D435F48 
 1460      575F585F 
 1460      456E6162 
 1460      6C654353 
 1461              	.LASF39:
 1462 0015 443A5C44 		.ascii	"D:\\Downloads\\FRUCD\\Node-Capybara\\Node-Capybara\\"
 1462      6F776E6C 
 1462      6F616473 
 1462      5C465255 
 1462      43445C4E 
 1463 0044 4E6F6465 		.ascii	"Node-Capybara.cydsn\000"
 1463      2D436170 
 1463      79626172 
 1463      612E6379 
 1463      64736E00 
 1464              	.LASF22:
 1465 0058 46535F4D 		.ascii	"FS_MMC_HW_X_IsWriteProtected\000"
 1465      4D435F48 
 1465      575F585F 
 1465      49735772 
 1465      69746550 
 1466              	.LASF21:
 1467 0075 77705374 		.ascii	"wpState\000"
 1467      61746500 
 1468              	.LASF11:
 1469 007d 5F5F696E 		.ascii	"__int32_t\000"
ARM GAS  D:\Windows\AppData\Local\Temp\ccaG2iBi.s 			page 42


 1469      7433325F 
 1469      7400
 1470              	.LASF37:
 1471 0087 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 1471      4320342E 
 1471      392E3320 
 1471      32303135 
 1471      30333033 
 1472 00ba 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 1472      20726576 
 1472      6973696F 
 1472      6E203232 
 1472      31323230 
 1473 00ed 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 1473      66756E63 
 1473      74696F6E 
 1473      2D736563 
 1473      74696F6E 
 1474              	.LASF15:
 1475 0115 646F7562 		.ascii	"double\000"
 1475      6C6500
 1476              	.LASF17:
 1477 011c 44617461 		.ascii	"Data\000"
 1477      00
 1478              	.LASF33:
 1479 0121 70446174 		.ascii	"pData\000"
 1479      6100
 1480              	.LASF14:
 1481 0127 666C6F61 		.ascii	"float\000"
 1481      7400
 1482              	.LASF3:
 1483 012d 756E7369 		.ascii	"unsigned char\000"
 1483      676E6564 
 1483      20636861 
 1483      7200
 1484              	.LASF23:
 1485 013b 46535F4D 		.ascii	"FS_MMC_HW_X_SetMaxSpeed\000"
 1485      4D435F48 
 1485      575F585F 
 1485      5365744D 
 1485      61785370 
 1486              	.LASF20:
 1487 0153 73706944 		.ascii	"spiData\000"
 1487      61746100 
 1488              	.LASF0:
 1489 015b 73686F72 		.ascii	"short unsigned int\000"
 1489      7420756E 
 1489      7369676E 
 1489      65642069 
 1489      6E7400
 1490              	.LASF32:
 1491 016e 46535F4D 		.ascii	"FS_MMC_HW_X_Read\000"
 1491      4D435F48 
 1491      575F585F 
 1491      52656164 
 1491      00
 1492              	.LASF42:
ARM GAS  D:\Windows\AppData\Local\Temp\ccaG2iBi.s 			page 43


 1493 017f 49544D5F 		.ascii	"ITM_RxBuffer\000"
 1493      52784275 
 1493      66666572 
 1493      00
 1494              	.LASF1:
 1495 018c 6C6F6E67 		.ascii	"long unsigned int\000"
 1495      20756E73 
 1495      69676E65 
 1495      6420696E 
 1495      7400
 1496              	.LASF27:
 1497 019e 46535F4D 		.ascii	"FS_MMC_HW_X_SetVoltage\000"
 1497      4D435F48 
 1497      575F585F 
 1497      53657456 
 1497      6F6C7461 
 1498              	.LASF6:
 1499 01b5 73686F72 		.ascii	"short int\000"
 1499      7420696E 
 1499      7400
 1500              	.LASF26:
 1501 01bf 64697652 		.ascii	"divResult\000"
 1501      6573756C 
 1501      7400
 1502              	.LASF24:
 1503 01c9 4D617846 		.ascii	"MaxFreq\000"
 1503      72657100 
 1504              	.LASF31:
 1505 01d1 46535F4D 		.ascii	"FS_MMC_HW_X_IsPresent\000"
 1505      4D435F48 
 1505      575F585F 
 1505      49735072 
 1505      6573656E 
 1506              	.LASF2:
 1507 01e7 756E7369 		.ascii	"unsigned int\000"
 1507      676E6564 
 1507      20696E74 
 1507      00
 1508              	.LASF36:
 1509 01f4 656D4669 		.ascii	"emFile_1_isInited0\000"
 1509      6C655F31 
 1509      5F697349 
 1509      6E697465 
 1509      643000
 1510              	.LASF10:
 1511 0207 6C6F6E67 		.ascii	"long long unsigned int\000"
 1511      206C6F6E 
 1511      6720756E 
 1511      7369676E 
 1511      65642069 
 1512              	.LASF29:
 1513 021e 566D6178 		.ascii	"Vmax\000"
 1513      00
 1514              	.LASF30:
 1515 0223 72657375 		.ascii	"result\000"
 1515      6C7400
 1516              	.LASF35:
ARM GAS  D:\Windows\AppData\Local\Temp\ccaG2iBi.s 			page 44


 1517 022a 46535F4D 		.ascii	"FS_MMC_HW_X_Write\000"
 1517      4D435F48 
 1517      575F585F 
 1517      57726974 
 1517      6500
 1518              	.LASF12:
 1519 023c 696E7433 		.ascii	"int32_t\000"
 1519      325F7400 
 1520              	.LASF4:
 1521 0244 73697A65 		.ascii	"sizetype\000"
 1521      74797065 
 1521      00
 1522              	.LASF9:
 1523 024d 6C6F6E67 		.ascii	"long long int\000"
 1523      206C6F6E 
 1523      6720696E 
 1523      7400
 1524              	.LASF34:
 1525 025b 4E756D42 		.ascii	"NumBytes\000"
 1525      79746573 
 1525      00
 1526              	.LASF5:
 1527 0264 63686172 		.ascii	"char\000"
 1527      00
 1528              	.LASF28:
 1529 0269 566D696E 		.ascii	"Vmin\000"
 1529      00
 1530              	.LASF25:
 1531 026e 66726571 		.ascii	"freq\000"
 1531      00
 1532              	.LASF13:
 1533 0273 75696E74 		.ascii	"uint8\000"
 1533      3800
 1534              	.LASF7:
 1535 0279 6C6F6E67 		.ascii	"long int\000"
 1535      20696E74 
 1535      00
 1536              	.LASF40:
 1537 0282 656D4669 		.ascii	"emFile_1_Init\000"
 1537      6C655F31 
 1537      5F496E69 
 1537      7400
 1538              	.LASF8:
 1539 0290 7369676E 		.ascii	"signed char\000"
 1539      65642063 
 1539      68617200 
 1540              	.LASF16:
 1541 029c 556E6974 		.ascii	"Unit\000"
 1541      00
 1542              	.LASF19:
 1543 02a1 46535F4D 		.ascii	"FS_MMC_HW_X_DisableCS\000"
 1543      4D435F48 
 1543      575F585F 
 1543      44697361 
 1543      626C6543 
 1544              	.LASF41:
 1545 02b7 656D4669 		.ascii	"emFile_1_ReadWriteSPI\000"
ARM GAS  D:\Windows\AppData\Local\Temp\ccaG2iBi.s 			page 45


 1545      6C655F31 
 1545      5F526561 
 1545      64577269 
 1545      74655350 
 1546              	.LASF38:
 1547 02cd 47656E65 		.ascii	"Generated_Source\\PSoC5\\emFile_1_MMC_HW_SPI.c\000"
 1547      72617465 
 1547      645F536F 
 1547      75726365 
 1547      5C50536F 
 1548              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
